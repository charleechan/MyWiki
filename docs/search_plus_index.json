{"./":{"url":"./","title":"我的Wiki-一本正经地胡说八道","keywords":"","body":"我的Wiki 按分类导航 | 按平台导航 | 软件教程导航 更新我的Wiki graph LR; classDef CSS3 fill:#20A162,stroke:#000000,color:#ffffff,stroke-width:0px; classDef CSS2 fill:#4C1F24,stroke:#000000,color:#ffffff,stroke-width:0px; classDef CSS1 fill:#1677B3,stroke:#000000,color:#ffffff,stroke-width:0px; ROOT(按语言) B1(Mark Language ) C1(Markdown ) C2(HTML ) C3(QML ) C13(XML ) B2(Scripts ) C4(\"Javascript(QScript) \") C5(Python ) C6(Matlab ) C7(CMD ) C8(TCL ) C9(Bash ) C10(PHP ) C11(SQL ) B3(StyleSheet ) C12(\"css(qss) \") B4(ConfigFile ) C14(Json ) C15(Ini ) B5(GeneralCode ) C16(C++ ) C17(C ) C18(Java ) B6(Hardware ) C19(Verilog HDL ) C20(VHDL ) C21(System Verilog ) B7(OtherLibs ) C22(Tensorflow ) C23(Pytorch ) C24(OpenCV ) ROOT --> B1 ROOT --> B2 ROOT --> B3 ROOT --> B4 ROOT --> B5 ROOT --> B6 ROOT --> B7 B1 --> C1 B1 --> C2 B1 --> C3 B2 --> C4 B2 --> C5 B2 --> C6 B2 --> C7 B2 --> C8 B2 --> C9 B2 --> C10 B2 --> C11 B3 --> C12 B1 --> C13 B4 --> C14 B4 --> C15 B5 --> C16 B5 --> C17 B5 --> C18 B6 --> C19 B6 --> C20 B6 --> C21 B7 --> C22 B7 --> C23 B7 --> C24 click C1 \"./Coding/LangsMark/MD/index.html\" \"点我打开\" click C2 \"./Coding/LangsMark/HTML/index.html\" \"点我打开\" click C3 \"./Coding/LangsMark/QML/index.html\" \"点我打开\" click C4 \"./Coding/LangsScript/JS/index.html\" \"点我打开\" click C5 \"./Coding/LangsScript/Python/index.html\" \"点我打开\" click C6 \"./Coding/LangsScript/Matlab/index.html\" \"点我打开\" click C7 \"./Coding/LangsScript/CMD/index.html\" \"点我打开\" click C8 \"./Coding/LangsScript/TCL/index.html\" \"点我打开\" click C9 \"./Coding/LangsScript/Bash/index.html\" \"点我打开\" click C10 \"./Coding/LangsScript/PHP/index.html\" \"点我打开\" click C11 \"./Coding/LangsScript/SQL/index.html\" \"点我打开\" click C12 \"./Coding/LangsStyle/CSS/index.html\" \"点我打开\" click C13 \"./Coding/LangsMark/XML/index.html\" \"点我打开\" click C14 \"./Coding/LangsConf/Json/index.html\" \"点我打开\" click C15 \"./Coding/LangsConf/Ini/index.html\" \"点我打开\" click C16 \"./Coding/LangsGene/Cpp/index.html\" \"点我打开\" click C17 \".Coding/LangsGene/C/index.html\" \"点我打开\" click C18 \"./Coding/LangsGene/Java/index.html\" \"点我打开\" click C19 \"./Coding/LangsHard/Verilog/index.html\" \"点我打开\" click C20 \"./Coding/LangsHard/VHDL/index.html\" \"点我打开\" click C21 \"./Coding/LangsHard/SystemVerilog/index.html\" \"点我打开\" click C22 \"./OtherLibs/Tensorflow/index.html\" \"点我打开\" click C23 \"./OtherLibs/Pytorch/index.html\" \"点我打开\" click C24 \"./OtherLibs/OpenCV/index.html\" \"点我打开\" class C1,C2,C3,C4,C5,,C6,C7,C8,C9,C10,C11,C12 CSS3 class C13,C14,C15,C16,C17,C18,C19,C20,C21,C22,C23,C24 CSS3 class B1,B2,B3,B4,B5,B6,B7 CSS1 class ROOT CSS2 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-28 11:59:48 "},"nav1.html":{"url":"nav1.html","title":"我的Wiki-编程平台","keywords":"","body":"我的Wiki 按分类导航 | 按平台导航 | 软件教程导航 更新我的Wiki 本站资源一览 graph LR; classDef CSS3 fill:#20A162,stroke:#000000,color:#ffffff,stroke-width:0px; classDef CSS2 fill:#4C1F24,stroke:#000000,color:#ffffff,stroke-width:0px; classDef CSS1 fill:#1677B3,stroke:#000000,color:#ffffff,stroke-width:0px; ROOT(按平台分类) D1(Hardware ) D2(OS ) D3(Web Apps ) D4(Local Apps ) D5(Server Apps ) C1(Markdown ) C2(HTML ) C3(QML ) C13(XML ) C4(\"Javascript(QScript) \") C5(Python ) C6(Matlab ) C7(CMD ) C8(TCL ) C9(Bash ) C10(PHP ) C11(SQL ) C12(\"css(qss) \") C14(Json ) C15(Ini ) C16(C++ ) C17(C ) C18(Java ) C19(Verilog HDL ) C20(VHDL ) C21(System Verilog ) C22(Tensorflow ) C23(Pytorch ) C24(OpenCV ) D3 --> C5 D4 --> C12 D3 --> C1 D3 --> C2 D4 --> C3 D3 --> C4 D4 --> C5 D4 --> C6 D2 --> C7 D1 --> C8 D2 --> C9 D5 --> C10 D5 --> C11 D3 --> C12 D3 --> C13 D3 --> C14 D4 --> C15 D4 --> C16 D4 --> C17 D4 --> C18 D1 --> C19 D1 --> C20 D1 --> C21 D4 --> C22 D4 --> C23 D4 --> C24 ROOT --> D1 ROOT --> D2 ROOT --> D3 ROOT --> D4 ROOT --> D5 click C1 \"./Coding/LangsMark/MD/index.html\" \"点我打开\" click C2 \"./Coding/LangsMark/HTML/index.html\" \"点我打开\" click C3 \"./Coding/LangsMark/QML/index.html\" \"点我打开\" click C4 \"./Coding/LangsScript/JS/index.html\" \"点我打开\" click C5 \"./Coding/LangsScript/Python/index.html\" \"点我打开\" click C6 \"./Coding/LangsScript/Matlab/index.html\" \"点我打开\" click C7 \"./Coding/LangsScript/CMD/index.html\" \"点我打开\" click C8 \"./Coding/LangsScript/TCL/index.html\" \"点我打开\" click C9 \"./Coding/LangsScript/Bash/index.html\" \"点我打开\" click C10 \"./Coding/LangsScript/PHP/index.html\" \"点我打开\" click C11 \"./Coding/LangsScript/SQL/index.html\" \"点我打开\" click C12 \"./Coding/LangsStyle/CSS/index.html\" \"点我打开\" click C13 \"./Coding/LangsMark/XML/index.html\" \"点我打开\" click C14 \"./Coding/LangsConf/Json/index.html\" \"点我打开\" click C15 \"./Coding/LangsConf/Ini/index.html\" \"点我打开\" click C16 \"./Coding/LangsGene/Cpp/index.html\" \"点我打开\" click C17 \".Coding/LangsGene/C/index.html\" \"点我打开\" click C18 \"./Coding/LangsGene/Java/index.html\" \"点我打开\" click C19 \"./Coding/LangsHard/Verilog/index.html\" \"点我打开\" click C20 \"./Coding/LangsHard/VHDL/index.html\" \"点我打开\" click C21 \"./Coding/LangsHard/SystemVerilog/index.html\" \"点我打开\" click C22 \"./OtherLibs/Tensorflow/index.html\" \"点我打开\" click C23 \"./OtherLibs/Pytorch/index.html\" \"点我打开\" click C24 \"./OtherLibs/OpenCV/index.html\" \"点我打开\" class C1,C2,C3,C4,C5,,C6,C7,C8,C9,C10,C11,C12 CSS3 class C13,C14,C15,C16,C17,C18,C19,C20,C21,C22,C23,C24 CSS3 class D1,D2,D3,D4,D5 CSS1 class ROOT CSS2 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-26 14:51:09 "},"nav2.html":{"url":"nav2.html","title":"我的Wiki-软件教程","keywords":"","body":"我的Wiki 按分类导航 | 按平台导航 | 软件教程导航 更新我的Wiki 本站资源一览 graph LR; classDef CSS3 fill:#20A162,stroke:#000000,color:#ffffff,stroke-width:0px; classDef CSS2 fill:#4C1F24,stroke:#000000,color:#ffffff,stroke-width:0px; classDef CSS1 fill:#1677B3,stroke:#000000,color:#ffffff,stroke-width:0px; ROOT(按软件类型) F2(Image ) G2(GIMP ) G3(Origin ) G4(Mermaid ) G5(Visio ) F3(Animation ) G7(PocketAnimation ) G10(SolidWorks ) G11(HTML5 ) F4(Video ) G12(VideoStudio ) F5(Office ) G13(Word ) G14(PPT ) G15(Excel ) F6(Project ) G16(Vivado ) G17(ModelSim ) G18(\"Cadence SPB(Allegro) \") G19(MultiSim ) G20(Altium Designer ) G21(Keil MDK ) G22(SolidWorks ) G23(Qt ) G24(Visual Studio ) G25(VS Code ) G1(Others) F7(Manage ) G26(Git ) G27(Inlook ) G28(Outlook ) F8(Plugins ) G29(Chrome Extension ) G30(VS Extension ) G31(gitbook plugin ) G32(GIMP plugin ) G33(Office plugin ) F4--> G12 F2--> G2 F2--> G3 F2--> G4 F2--> G5 F2--> G10 F3--> G7 F3--> G2 F3--> G10 F3--> G11 F5--> G13 F5--> G14 F5--> G15 F6--> G1 F6--> G16 F6--> G17 F6--> G18 F6--> G19 F6--> G20 F6--> G21 F6--> G22 F6--> G23 F6--> G24 F6--> G25 F7--> G26 F7--> G27 F7--> G28 F8--> G29 F8--> G30 F8--> G31 F8--> G32 F8--> G33 ROOT --> F2 ROOT --> F3 ROOT --> F4 ROOT --> F5 ROOT --> F6 ROOT --> F7 ROOT --> F8 click G1 \"./SoftTuto/Project/Others/index.html\" \"点我打开\"; click G2 \"./SoftTuto/Image/GIMP/index.html\" \"点我打开\"; click G3 \"./SoftTuto/Image/Origin/index.html\" \"点我打开\"; click G4 \"./SoftTuto/Image/Mermaid/index.html\" \"点我打开\"; click G5 \"./SoftTuto/Image/Visio/index.html\" \"点我打开\"; click G7 \"./SoftTuto/Animation/PocketAnimation/index.html\" \"点我打开\"; click G10 \"./SoftTuto/Animation/SolidWorks/index.html\" \"点我打开\"; click G11 \"./SoftTuto/Animation/HTML5/index.html\" \"点我打开\"; click G12 \"./SoftTuto/Video/VideoStudio/index.html\" \"点我打开\"; click G13 \"./SoftTuto/Office/Word/index.html\" \"点我打开\"; click G14 \"./SoftTuto/Office/PPT/index.html\" \"点我打开\"; click G15 \"./SoftTuto/Office/Excel/index.html\" \"点我打开\"; click G16 \"./SoftTuto/Project/Vivado/index.html\" \"点我打开\"; click G17 \"./SoftTuto/Project/ModelSim/index.html\" \"点我打开\"; click G18 \"./SoftTuto/Project/CadenceSPB/index.html\" \"点我打开\"; click G19 \"./SoftTuto/Project/MultiSim/index.html\" \"点我打开\"; click G20 \"./SoftTuto/Project/AltiumDesigner/index.html\" \"点我打开\"; click G21 \"./SoftTuto/Project/KeilMDK/index.html\" \"点我打开\"; click G22 \"./SoftTuto/Project/SolidWorks/index.html\" \"点我打开\"; click G23 \"./SoftTuto/Project/Qt/index.html\" \"点我打开\"; click G24 \"./SoftTuto/Project/VisualStudio/index.html\" \"点我打开\"; click G25 \"./SoftTuto/Project/VSCode/index.html\" \"点我打开\"; click G26 \"./SoftTuto/Manage/Git/index.html\" \"点我打开\"; click G27 \"./SoftTuto/Manage/Inlook/index.html\" \"点我打开\"; click G28 \"./SoftTuto/Manage/Outlook/index.html\" \"点我打开\"; click G29 \"./SoftTuto/Plugins/ChromeExt/index.html\" \"点我打开\"; click G30 \"./SoftTuto/Plugins/VSCodeExt/index.html\" \"点我打开\"; click G31 \"./SoftTuto/Plugins/GitbookPlu/index.html\" \"点我打开\"; click G32 \"./SoftTuto/Plugins/GIMPPlu/index.html\" \"点我打开\"; click G33 \"./SoftTuto/Plugins/OfficePlu/index.html\" \"点我打开\"; class G1,G2,G3,G4,G5,G7,G8,G9,G10,G11,G12 CSS3 class G13,G14,G15,G16,G17,G18,G19,G20,G21,G22,G23,G24 CSS3 class G25,G26,G27,G28,G29,G30,G31,G32,G33 CSS3 class F2,F3,F4,F5,F6,F7,F8 CSS1 class ROOT CSS2 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-26 14:51:12 "},"Coding/LangsConf/":{"url":"Coding/LangsConf/","title":"配置文件","keywords":"","body":"资源列表 回到首页 Ini Json 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsConf/Ini/":{"url":"Coding/LangsConf/Ini/","title":"Ini","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsConf/Json/":{"url":"Coding/LangsConf/Json/","title":"Json","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsGene/":{"url":"Coding/LangsGene/","title":"通用编程语言","keywords":"","body":"资源列表 回到首页 C Cpp Java 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsGene/C/":{"url":"Coding/LangsGene/C/","title":"C语言","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsGene/Cpp/":{"url":"Coding/LangsGene/Cpp/","title":"C++","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsGene/Java/":{"url":"Coding/LangsGene/Java/","title":"Java","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsHard/":{"url":"Coding/LangsHard/","title":"硬件描述语言","keywords":"","body":"资源列表 回到首页 SV Verilog VHDL 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsHard/SV/":{"url":"Coding/LangsHard/SV/","title":"System Verilog","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsHard/Verilog/":{"url":"Coding/LangsHard/Verilog/","title":"Verilog HDL","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsHard/VHDL/":{"url":"Coding/LangsHard/VHDL/","title":"VHDL","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsMark/":{"url":"Coding/LangsMark/","title":"标记语言","keywords":"","body":"资源列表 回到首页 HTML HTML(Hyper Text Markup Language, 超文本标记语言)的基础知识 MD Markdown公式代码大全 Markdown支持绘制脑图啦 使用WaveDrom画时序图或电路图 使用mermaid绘制流程图/脑图 在Markdown中使用FontAwesome 在Markdown中使用Javascript res 资源(右键打开或下载) QML Qt Quick开发教程1:安卓开发环境的配置 Qt Quick开发教程2:QML语法 Qt Quick开发教程3:导出C++到QML QtQuickTutorial_4_QML_DesignRules.pdf assets 资源(右键打开或下载) sshot-1.png sshot-2.png XML 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsMark/HTML/":{"url":"Coding/LangsMark/HTML/","title":"HTML","keywords":"","body":"资源列表 回到首页 HTML(Hyper Text Markup Language, 超文本标记语言)的基础知识 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsMark/HTML/1_HTMLBasics.html":{"url":"Coding/LangsMark/HTML/1_HTMLBasics.html","title":"HTML(Hyper Text Markup Language, 超文本标记语言)的基础知识","keywords":"","body":"HTML(Hyper Text Markup Language, 超文本标记语言)的基础知识 * HTML基础 * 目的: 由浏览器解析、渲染成网页 * 文件后缀: `.html`和`.htm`无区别 * 基本元素: 由``指定`tag`标签,通常成对出现**开始标签和结束标签**,如``和`` * 元素特点: 成对; 可嵌套; 空元素(``和``之间无内容)在开始标签关闭元素; **请小写.** * 元素属性: 用于定义元素的特点,格式`name=\"MyName\"`,值应使用单引号或双引号包围起来. * 开发环境 * 编辑器: `VS Code`,编辑完成后直接双击打开. * 调试: 浏览器按`F12` * 文档结构 * ``声明文档类型,方便浏览器解析 * ``是页面的**根元素** * ``包含元(meta)数据,*不显示* * ``定义编码格式 * ``为搜索引擎定义关键词 * `` 定义自动刷新间隔 * ``定义网页标题 * ``设置本网页默认的链接目标,写法同`` * ``网页内容,*显示* * ``1级大标题,支持``,``,`...`,`` * ``段落 * 样式设置 * 内联样式 * ``中的元素通过`style`属性设置:`我是段落` * 内部样式 * 在``中添加`body{color:black}` * 外部样式表 * ``添加``链接外部样式 * 常用样式(可应用到文本等大部分元素) * 背景 * 背景颜色`background-color:red;` * 文本 * 字体`font-family:arial;` * 文本颜色`color:red;` * 文本尺寸`font-size:20px;` * 对齐`text-align:center;` * 常用属性(大部分元素) * `class` * 定义元素的类型名(用于从样式文件中设置样式) * `id` * 定义元素的ID(用于设置样式,JS读取并设置等) * `style` * 定义元素的行内样式 * `title` * 定义元素的额外信息(工具条) * 链接 * `链接文本` * 链接发起者可以是`文本`,`图像`,或其他HTML元素. * `herf`属性 * `#idvalue`链接到目标页面中`id=idvalue`的元素的位置. * `herf=\"#idvalue`将链接到当前页的相应元素位置. * 发邮件`herf=mailto:aa@xx.com?Subject=Hello%20again` * `target`定义显示到:`_blank`新窗口,`_top`跳出框架 * 图像(空元素) * `` * 属性`border`定义边框宽度,如`border=\"0\"` * 属性`alt`定义替代文本,如`alt=\"logo.png\"` * 使用`style=\"align:top\"`定义图片顶部与文本对齐 * 使用`style=\"float:right\"`定义浮动在文本的右边 * 使用``和``为图像分块设置链接. * 当网页图片过多,加载会很慢,慎用图片! * 文本 * 换行,水平线,注释 * ``,```` * 加粗,斜体,上下标 * `加粗`,`斜体`,`下标`,`上标` * 着重,加重,下划线,删除线 * `着重`,`加重`,`下划线`,`删除线` * 代码,键盘 * `代码`,`键盘` * 表格 * ``定义表格,设置边界,单元格间距,单元格边距 * `Table 1.aa`定义表格的标题 * ``定义一个行 * `Header`定义表头(一般会在第一行/列定义,会自动加粗居中) * `I'm in a cell`定义一个单元格 * `colspan=\"2\"`和`rowspan=\"2\"`可以设置一个跨2行/列的单元格 * 列表 * `item1item2`定义无序列表 * `style=\"list-style-type:disc\"`定义列表样式 * `item1item2`定义有序列表 * `type=\"A\"`定义列表样式为大写字母列表 * ``容器 * 用于对大的内容块设置样式属性 * 用于文档布局 * `style=\"background-color:#EEEEEE;height:200px;width:400px;float:left;\"` * 表单 * ``创建表单 * `Title`设置表单的外框及Title * ``用于输入的元素 * ``文本输入框 * ``密码输入框 * ``单选输入 * ``复选输入 * ``提交按钮 * `Saab`多选框 * ``设置按钮 * 框架(嵌套显示多个页面) * ``第一个框架显示URL页面 * `RUNOOB.COM`该超链接将更新框架内的内容 * 颜色 * `R,G,B`表示颜色值,`rgb(255,0,17)` * 十六进制,六位表示,`#FF0011` * 十六进制,三位`#RGB`,等价于`#RRGGBB` * ``脚本 * `document.write(\"嘿嘿\")`输出到HTML流 * `btnFun()`定义按钮事件响应 * `document.getElementById(\"demo\").style.color=\"#ff0000\";`修改文档样式 * 转义字符 * `&nbsp;` ` `(Non-breaking Space) * `&lt;` ``(great than, 大于) * `&amp;` `&` (ampersand, 表示and的符号) * `&quot;` `\"`(quote, 引号) * `&sect;` `§` (section, 小节) * `&copy;` `©` (copyright,版权) * `&reg;` `®` (register,注册商标) * `&times;` `×` (times, 乘号) * `&divide;` `÷` (divide, 除号) 饭后甜点 HTML速查 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-27 10:44:16 "},"Coding/LangsMark/MD/":{"url":"Coding/LangsMark/MD/","title":"Markdown","keywords":"","body":"资源列表 回到首页 Markdown公式代码大全 Markdown支持绘制脑图啦 使用WaveDrom画时序图或电路图 使用mermaid绘制流程图/脑图 在Markdown中使用FontAwesome 在Markdown中使用Javascript res 资源(右键打开或下载) 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsMark/MD/EquationInMD.html":{"url":"Coding/LangsMark/MD/EquationInMD.html","title":"Markdown公式代码大全","keywords":"","body":"Markdown公式代码大全 下面给出了Markdown中的公式代码。 在Word中的Latex公式代码与下面略有不同，详情点我查看 样例 \\LaTeX代码 \\LaTeX {% mathblock %}\\LaTeX{% endmathblock %} \\dot{a} \\ddot{a} \\acute{a} \\grave{a} \\dot{a} \\ddot{a} \\acute{a} \\grave{a} \\check{a} \\breve{a} \\tilde{a} \\bar{a} \\check{a} \\breve{a} \\tilde{a} \\bar{a} \\hat{a} \\widehat{a} \\vec{a} \\hat{a} \\widehat{a} \\vec{a} \\exp_a b=a^b \\exp_a b=a^b \\exp b=e^b \\exp b=e^b \\sin,\\cos,\\tan \\sin,\\cos,\\tan \\sec,\\csc,\\cot \\sec,\\csc,\\cot \\arcsin,\\arccos,\\arctan \\arcsin,\\arccos,\\arctan \\sinh,\\cosh,\\tanh,\\coth \\sinh,\\cosh,\\tanh,\\coth \\arg z \\arg z \\left\\vert a\\right\\vert \\lVert z\\rVert \\left\\vert a\\right\\vert \\lVert z\\rVert \\min x \\max y \\inf s \\sup t \\min x \\max y \\inf s \\sup t \\lim u \\liminf v \\limsup w \\lim u \\liminf v \\limsup w \\dim p \\deg q \\det m \\ker\\phi \\dim p \\deg q \\det m \\ker\\phi dt \\mathrm{d}t \\partial t \\nabla\\psi dt \\mathrm{d}t \\partial t \\nabla\\psi \\prime \\backprime f^\\prime f' f'' f^{(3)} \\dot{y} \\ddot{y} \\prime \\backprime f^\\prime f' f'' f^{(3)} \\dot{y} \\ddot{y} \\infty \\aleph \\complement \\backepsilon \\eth \\Finv \\hbar \\infty \\aleph \\complement \\backepsilon \\eth \\Finv \\hbar \\Im \\imath \\jmath \\Bbbk \\ell \\mho \\wp \\Re \\circledS \\Im \\imath \\jmath \\Bbbk \\ell \\mho \\wp \\Re \\circledS a\\equiv1\\pmod{m} a\\equiv1\\pmod{m} a\\bmod b a\\bmod b \\gcd(m,n) \\operatorname{lcm}(m,n) \\gcd(m,n) \\operatorname{lcm}(m,n) \\mid \\nmid \\shortmid \\nshortmid \\mid \\nmid \\shortmid \\nshortmid \\| \\nmid \\shortmid \\nshortmid \\| \\nmid \\shortmid \\nshortmid a\\%b a\\%b \\surd \\sqrt{2} \\sqrt[n]{} \\sqrt[n]{x} \\surd \\sqrt{2} \\sqrt[n]{} \\sqrt[n]{x} + - \\pm \\mp \\dotplus + - \\pm \\mp \\dotplus \\times \\div \\divideontimes / \\backslash \\times \\div \\divideontimes / \\backslash \\cdot \\ast * \\star \\circ \\bullet \\cdot \\ast * \\star \\circ \\bullet \\boxplus \\boxminus \\boxtimes \\boxdot \\boxplus \\boxminus \\boxtimes \\boxdot \\oplus \\ominus \\otimes \\oslash \\odot \\oplus \\ominus \\otimes \\oslash \\odot \\circleddash \\circledcirc \\circledast \\circleddash \\circledcirc \\circledast \\bigoplus \\bigotimes \\bigodot \\bigoplus \\bigotimes \\bigodot \\{ \\} \\emptyset \\varnothing \\{ \\} \\emptyset \\varnothing \\in \\notin \\not\\in \\ni \\not\\ni \\in \\notin \\not\\in \\ni \\not\\ni \\cap \\Cap \\sqcap \\bigcap \\cap \\Cap \\sqcap \\bigcap \\cup \\Cup \\sqcup \\bigcup \\bigsqcup \\uplus \\biguplus \\cup \\Cup \\sqcup \\bigcup \\bigsqcup \\uplus \\biguplus \\setminus \\smallsetminus \\times \\setminus \\smallsetminus \\times \\subset \\Subset \\sqsubset \\subset \\Subset \\sqsubset \\supset \\Supset \\sqsupset \\supset \\Supset \\sqsupset \\subseteq \\nsubseteq \\subsetneq \\varsubsetneq \\sqsubseteq \\subseteq \\nsubseteq \\subsetneq \\varsubsetneq \\sqsubseteq \\supseteq \\nsupseteq \\supsetneq \\varsupsetneq \\sqsupseteq \\supseteq \\nsupseteq \\supsetneq \\varsupsetneq \\sqsupseteq \\subseteqq \\nsubseteqq \\subsetneqq \\varsubsetneqq \\subseteqq \\nsubseteqq \\subsetneqq \\varsubsetneqq \\supseteqq \\nsupseteqq \\supsetneqq \\varsupsetneqq \\supseteqq \\nsupseteqq \\supsetneqq \\varsupsetneqq = \\ne \\neq \\equiv \\not\\equiv = \\ne \\neq \\equiv \\not\\equiv \\doteq \\doteqdot \\overset{\\underset{def}{}}{=} := \\doteq \\doteqdot \\overset{\\underset{def}{}}{=} := \\sim \\nsim \\backsim \\thicksim \\simeq \\backsimeq \\eqsim \\cong \\ncong \\sim \\nsim \\backsim \\thicksim \\simeq \\backsimeq \\eqsim \\cong \\ncong \\approx \\thickapprox \\approxeq \\asymp \\propto \\varpropto \\approx \\thickapprox \\approxeq \\asymp \\propto \\varpropto > \\ngtr \\gg \\not\\gg \\ggg \\not\\ggg \\gtrdot > \\ngtr \\gg \\not\\gg \\ggg \\not\\ggg \\gtrdot \\le \\leq \\lneq \\leqq \\nleq \\nleqq \\lneqq \\lvertneqq \\le \\leq \\lneq \\leqq \\nleq \\nleqq \\lneqq \\lvertneqq \\ge \\geq \\gneq \\geqq \\ngeq \\ngeqq \\gneqq \\gvertneqq \\ge \\geq \\gneq \\geqq \\ngeq \\ngeqq \\gneqq \\gvertneqq \\lessgtr \\lesseqgtr \\lesseqqgtr \\gtrless \\gtreqless \\gtreqqless \\lessgtr \\lesseqgtr \\lesseqqgtr \\gtrless \\gtreqless \\gtreqqless \\leqslant \\nleqslant \\eqslantless \\leqslant \\nleqslant \\eqslantless \\geqslant \\ngeqslant \\eqslantgtr \\geqslant \\ngeqslant \\eqslantgtr \\lesssim \\lnsim \\lessapprox \\lnapprox \\lesssim \\lnsim \\lessapprox \\lnapprox \\gtrsim \\gnsim \\gtrapprox \\gnapprox \\gtrsim \\gnsim \\gtrapprox \\gnapprox \\prec \\nprec \\preceq \\npreceq \\precneqq \\prec \\nprec \\preceq \\npreceq \\precneqq \\parallel \\nparallel \\shortparallel \\nshortparallel \\parallel \\nparallel \\shortparallel \\nshortparallel \\perp \\angle \\sphericalangle \\measuredangle 45^\\circ \\perp \\angle \\sphericalangle \\measuredangle 45^\\circ \\Box \\blacksquare \\diamond \\Diamond \\lozenge \\blacklozenge \\bigstar \\Box \\blacksquare \\diamond \\Diamond \\lozenge \\blacklozenge \\bigstar \\bigcirc \\triangle \\bigtriangleup \\bigtriangledown \\bigcirc \\triangle \\bigtriangleup \\bigtriangledown \\vartriangle \\triangledown \\triangleleft \\triangleright \\vartriangle \\triangledown \\triangleleft \\triangleright \\blacktriangle \\blacktriangledown \\blacktriangleleft \\blacktriangleright \\blacktriangle \\blacktriangledown \\blacktriangleleft \\blacktriangleright \\forall \\exists \\nexists \\forall \\exists \\nexists \\therefore \\because \\And \\& \\therefore \\because \\And \\& \\bar{q} \\bar{abc} \\overline{q} \\overline{abc} \\bar{q} \\bar{abc} \\overline{q} \\overline{abc} \\Rrightarrow \\Lleftarrow \\Rrightarrow \\Lleftarrow \\Rightarrow \\nRightarrow \\Longrightarrow \\implies \\Rightarrow \\nRightarrow \\Longrightarrow \\implies \\Leftarrow \\nLeftarrow \\Longleftarrow \\Leftarrow \\nLeftarrow \\Longleftarrow \\Leftrightarrow \\nLeftrightarrow \\Longleftrightarrow \\iff \\Leftrightarrow \\nLeftrightarrow \\Longleftrightarrow \\iff \\Uparrow \\Downarrow \\Updownarrow \\Uparrow \\Downarrow \\Updownarrow \\leftarrow \\rightarrow \\nleftarrow \\nrightarrow \\longleftarrow \\longrightarrow \\leftarrow \\rightarrow \\nleftarrow \\nrightarrow \\longleftarrow \\longrightarrow \\leftrightarrow \\nleftrightarrow \\longleftrightarrow \\leftrightarrow \\nleftrightarrow \\longleftrightarrow \\uparrow \\downarrow \\updownarrow \\nearrow \\searrow \\nwarrow \\swarrow \\uparrow \\downarrow \\updownarrow \\nearrow \\searrow \\nwarrow \\swarrow \\mapsto \\longmapsto \\mapsto \\longmapsto \\rightharpoonup \\rightharpoondown \\leftharpoonup \\leftharpoondown \\rightharpoonup \\rightharpoondown \\leftharpoonup \\leftharpoondown \\upharpoonleft \\upharpoonright \\downharpoonleft \\downharpoonright \\upharpoonleft \\upharpoonright \\downharpoonleft \\downharpoonright \\leftrightharpoons \\rightleftharpoons \\leftrightharpoons \\rightleftharpoons \\twoheadrightarrow \\twoheadleftarrow \\twoheadrightarrow \\twoheadleftarrow \\xleftarrow{left} \\xrightarrow{right} \\xleftarrow{left} \\xrightarrow{right} \\xleftrightarrow{left\\& right} \\xleftrightarrow{left\\& right} \\xlongequal[cond1]{cond2} \\xlongequal[cond1]{cond2} \\amalg \\% \\dagger \\ddagger \\ldots \\cdots \\amalg \\% \\dagger \\ddagger \\ldots \\cdots \\diamondsuit \\heartsuit \\clubsuit \\spadesuit \\diamondsuit \\heartsuit \\clubsuit \\spadesuit \\Game \\flat \\natural \\sharp \\Game \\flat \\natural \\sharp {}^2_1\\!X^3_4 {}^2_1\\!X^3_4 \\vec{x} \\overleftarrow{AB} \\overrightarrow{AB} \\widehat{AB} \\vec{x} \\overleftarrow{AB} \\overrightarrow{AB} \\widehat{AB} \\overset{\\frown}{AB} \\overset{\\frown}{AB} \\overline{ABC} \\underline{ABC} \\overline{ABC} \\underline{ABC} \\overbrace{1+2+\\cdots+100} \\overbrace{1+2+\\cdots+100} \\begin{matrix}5050\\\\\\overbrace{1+2+\\cdots+100}\\end{matrix} \\begin{matrix}5050\\\\\\overbrace{1+2+\\cdots+100}\\end{matrix} \\underbrace{1+2+\\cdots+100} \\underbrace{1+2+\\cdots+100} \\begin{matrix}\\underbrace{1+2+\\cdots+100}\\\\5050\\end{matrix} \\begin{matrix}\\underbrace{1+2+\\cdots+100}\\\\5050\\end{matrix} \\sum_{i=1}^na_i \\sum\\limits_{i=1}^na_i \\sum_{i=1}^na_i \\sum\\limits_{i=1}^na_i \\prod_{i=1}^na_i \\prod\\limits_{i=1}^na_i \\prod_{i=1}^na_i \\prod\\limits_{i=1}^na_i \\coprod_{i=1}^na_i \\coprod\\limits_{i=1}^na_i \\coprod_{i=1}^na_i \\coprod\\limits_{i=1}^na_i \\lim_{n\\to\\infty}x_n \\lim\\limits_{n\\to\\infty}x_n \\lim_{n\\to\\infty}x_n \\lim\\limits_{n\\to\\infty}x_n \\int_{-N}^{N}e^x\\,dx \\int_{-N}^{N}e^x\\,dx \\iint_M^Ndx\\,dy \\iint_M^Ndx\\,dy \\iiint_M^Ndx\\,dy\\,dz \\iiint_M^Ndx\\,dy\\,dz \\oint_Cx^3\\,dx+4y^2\\,dy \\oint_Cx^3\\,dx+4y^2\\,dy \\bigcap_1^np \\bigcap\\limits_1^np \\bigcap_1^np \\bigcap\\limits_1^np \\bigcup_1^np \\bigcup\\limits_1^np \\bigcup_1^np \\bigcup\\limits_1^np \\frac{1}{2}=0.5 \\frac{1}{2}=0.5 \\tfrac{1}{2}=0.5 \\tfrac{1}{2}=0.5 \\dfrac{1}{2}=0.5 \\dfrac{1}{x+\\dfrac{3}{y+\\dfrac{1}{5}}} \\dfrac{1}{2}=0.5 \\dfrac{1}{x+\\dfrac{3}{y+\\dfrac{1}{5}}} \\dbinom{n}{m}=\\dbinom{n}{n-m}=C_n^m=C_n^{n-m} \\dbinom{n}{m}=\\dbinom{n}{n-m}=C_n^m=C_n^{n-m} \\tbinom{n}{m}=\\tbinom{n}{n-m}=C_n^m=C_n^{n-m} \\tbinom{n}{m}=\\tbinom{n}{n-m}=C_n^m=C_n^{n-m} \\binom{n}{m}=\\binom{n}{n-m}=C_n^m=C_n^{n-m} \\binom{n}{m}=\\binom{n}{n-m}=C_n^m=C_n^{n-m} \\begin{matrix}a&b\\\\c&d\\end{matrix} \\begin{matrix}a&b\\\\c&d\\end{matrix} \\begin{vmatrix}a&b\\\\c&d\\end{vmatrix} \\begin{vmatrix}a&b\\\\c&d\\end{vmatrix} \\begin{Vmatrix}a&b\\\\c&d\\end{Vmatrix} \\begin{Vmatrix}a&b\\\\c&d\\end{Vmatrix} \\begin{bmatrix}a&\\cdots&b\\\\\\vdots&\\ddots&\\vdots\\\\c&\\cdots&d\\end{bmatrix} \\begin{bmatrix}a&\\cdots&b\\\\\\vdots&\\ddots&\\vdots\\\\c&\\cdots&d\\end{bmatrix} \\begin{Bmatrix}a&c\\\\b&d\\end{Bmatrix} \\begin{Bmatrix}a&c\\\\b&d\\end{Bmatrix} \\begin{pmatrix}a&c\\\\b&d\\end{pmatrix} \\begin{pmatrix}a&c\\\\b&d\\end{pmatrix} f(x)=\\begin{cases}x-1&x\\leqslant3\\\\x^2+3x-1&x>3\\end{cases} f(x)=\\begin{cases}x-1&x\\leqslant3\\\\x^2+3x-1&x>3\\end{cases} \\begin{cases}2x+9y-5z=10\\\\4x+20y+z=24\\\\x-\\dfrac{1}{2}y+3z=8\\end{cases} \\begin{cases}2x+9y-5z=10\\\\4x+20y+z=24\\\\x-\\dfrac{1}{2}y+3z=8\\end{cases} \\begin{aligned}f(x) & = (x + 1)^2 \\\\ & = x^2 + 2x + 1\\end{aligned} \\begin{aligned}f(x) & = (x + 1)^2 \\\\ & = x^2 + 2x + 1\\end{aligned} \\alpha\\beta\\gamma\\delta\\epsilon\\zeta\\eta\\theta \\alpha\\beta\\gamma\\delta\\epsilon\\zeta\\eta\\theta \\iota\\kappa\\lambda\\mu\\nu\\xi\\omicron\\pi \\iota\\kappa\\lambda\\mu\\nu\\xi\\omicron\\pi \\rho\\sigma\\tau\\upsilon\\phi\\chi\\psi\\omega \\rho\\sigma\\tau\\upsilon\\phi\\chi\\psi\\omega \\varepsilon\\digamma\\varkappa\\varpi \\varepsilon\\digamma\\varkappa\\varpi \\varrho\\varsigma\\vartheta\\varphi \\varrho\\varsigma\\vartheta\\varphi \\mathbb{ABCDEFGHI} \\mathbb{ABCDEFGHI} \\mathit{A} \\mathit{A} \\mathtt{ABCDEFGHI} \\mathtt{ABCDEFGHI} \\mathrm{ABCDEFGHI} \\mathrm{ABCDEFGHI} \\mathcal{ABCDEFGHI} \\mathcal{ABCDEFGHI} \\text{x y z} \\text{中文} \\text{x y z} \\text{中文} (\\dfrac{1}{2}) (\\dfrac{1}{x+\\dfrac{2}{3}}) (\\dfrac{1}{2}) (\\dfrac{1}{x+\\dfrac{2}{3}}) \\left(\\dfrac{1}{2}\\right) \\left(\\dfrac{1}{x+\\dfrac{2}{3}}\\right) \\left(\\dfrac{1}{2}\\right) \\left(\\dfrac{1}{x+\\dfrac{2}{3}}\\right) \\left[\\dfrac{1}{2}\\right] \\left[\\dfrac{1}{2}\\right] \\left\\{\\dfrac{1}{2}\\right\\} \\left\\{\\dfrac{1}{2}\\right\\} \\left\\langle\\dfrac{1}{2}\\right\\rangle \\left\\langle\\dfrac{1}{2}\\right\\rangle \\left\\vert\\dfrac{1}{2}\\right\\vert \\left\\vert\\dfrac{1}{2}\\right\\vert \\left\\|\\dfrac{1}{2}\\right\\| \\left\\|\\dfrac{1}{2}\\right\\| \\left\\lfloor\\dfrac{1}{2}\\right\\rfloor \\left\\lfloor\\dfrac{1}{2}\\right\\rfloor \\left\\lceil\\dfrac{1}{2}\\right\\rceil \\left\\lceil\\dfrac{1}{2}\\right\\rceil \\left/\\dfrac{1}{2}\\right/ \\left/\\dfrac{1}{2}\\right/ \\left\\backslash\\dfrac{1}{2}\\right\\backslash \\left\\backslash\\dfrac{1}{2}\\right\\backslash \\left(\\dfrac{1}{2}\\right. \\left(\\dfrac{1}{2}\\right. \\left.\\dfrac{1}{2}\\right] \\left.\\dfrac{1}{2}\\right] xy xy x\\,y x\\,y x\\;y x\\;y x\\ y x\\ y x\\quad y x\\quad y \\qquad y \\qquad y x=\\dfrac{-b\\pm\\sqrt{\\color{Red}b^2-4ac}}{\\color{Blue}2a} x=\\dfrac{-b\\pm\\sqrt{\\color{Red}b^2-4ac}}{\\color{Blue}2a} \\boxed{\\sum\\limits_{i = 1}^{n} i = \\dfrac{n(n - 1)}{2}} \\boxed{\\sum\\limits_{i = 1}^{n} i = \\dfrac{n(n - 1)}{2}} \\color{Blue}\\colorbox{Yellow}{LaTeX公式大全} {% mathblock %}\\color{Blue}\\colorbox{Yellow}{LaTeX公式大全}{% endmathblock %} 另外，表格： \r \\begin{array}\r {|c|c||c|}\r x&y&z\\\\\r 8&2&4\\\\\r 2&3&9\\\\\r 10&\\dfrac{3}{4}&\\sqrt{3}\\\\\r a&b&c\r \\end{array}\r 的代码 \\begin{array} {|c|c||c|} x&y&z\\\\ 8&2&4\\\\ 2&3&9\\\\ 10&\\dfrac{3}{4}&\\sqrt{3}\\\\ a&b&c \\end{array} MathJax.Hub.Config({ TeX: { extensions: [\"extpfeil.js\",\"color.js\",\"mhchem.js\"] }}); 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-11 09:39:37 "},"Coding/LangsMark/MD/PlotMindMap.html":{"url":"Coding/LangsMark/MD/PlotMindMap.html","title":"Markdown支持绘制脑图啦","keywords":"","body":"Markdown支持绘制脑图啦 使用插件mind-maps 绘制脑图. 代码块标识 mind, 选项有height=300,title=a mind map of something,color # 1 ## 1.1 ### 1.1.1 ## 1.2 # 2 # 3 对应的脑图为 脑图示例 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-25 10:38:16 "},"Coding/LangsMark/MD/PlotTimingDiagram.html":{"url":"Coding/LangsMark/MD/PlotTimingDiagram.html","title":"使用WaveDrom画时序图或电路图","keywords":"","body":"使用WaveDrom画时序图或电路图 WaveDrom.js是一个JS脚本. VS Code中的使用方法 VS Code的Markdown Preview Enhanced插件已经支持wavedrom.可以直接使用代码块标识wavedrom使用.例如 {signal: [ {name: \"Alfa\", wave: \"01.zx=ud.23.456789\" }, {name: 'clk', wave: 'p.....|P..'}, {name: 'dat', wave: 'x.345x|=.x', data: ['head', 'body', 'tail', 'data']}, {name: 'req', wave: '0.1..0|1.0'}, {name: 'ack', wave: '1.....|01.'} ]} {signal: [ {name: \"Alfa\", wave: \"01.zx=ud.23.456789\" }, {name: 'clk', wave: 'p.....|P..'}, {name: 'dat', wave: 'x.345x|=.x', data: ['head', 'body', 'tail', 'data']}, {name: 'req', wave: '0.1..0|1.0'}, {name: 'ack', wave: '1.....|01.'} ]} Gitbook网页端,不会显示本图.请使用Gitbook中的使用方法 Gitbook中的使用方法 在Markdown文件的末尾放入以下代码 在要插入时序图的位置,插入以下代码 {signal: [ {name: \"Alfa\", wave: \"01.zx=ud.23.456789\" }, {name: 'clk', wave: 'p.....|P..'}, {name: 'dat', wave: 'x.345x|=.x', data: ['head', 'body', 'tail', 'data']}, {name: 'req', wave: '0.1..0|1.0'}, {name: 'ack', wave: '1.....|01.'} ]} 渲染效果: {signal: [ {name: \"Alfa\", wave: \"01.zx=ud.23.456789\" }, {name: 'clk', wave: 'p.....|P..'}, {name: 'dat', wave: 'x.345x|=.x', data: ['head', 'body', 'tail', 'data']}, {name: 'req', wave: '0.1..0|1.0'}, {name: 'ack', wave: '1.....|01.'} ]} 时序图语法 signal元素是波形图的数组,包含若干个波形. 每个波形图至少包含两个域,分别是信号名name和波形数据wave. wave字符串中的每个字符都代表了一个时钟周期. .: 延续上一周期的状态. wave中的字符中,用于时钟信号的值: p: 上升沿开始的时钟信号(50%); P: 带箭头的、上升沿开始的时钟信号(50%); n: 下降沿沿开始的时钟信号(50%); N: 带箭头的、下降沿开始的时钟信号(50%); h: 高电平,如果有跳变,边沿是平的. H: 带箭头的、高电平. l: 低电平,如果有跳变,边沿是平的. L: 带箭头的、低电平. wave中的字符中,用于数据信号的值: 0: 低电平,如果有跳变,边沿是斜的. 1: 高电平,如果有跳变,边沿是斜的. x: 不确定. z: 高阻态. u: exp型上升线. d: exp型下降线. =: 引用data域的字符,背景色为白色. 2: 引用data域的字符,背景色透明. 3/4/5/6/7/8/9: 引用data域的字符,并加不同的背景色 综合 {signal: [ {name: \"Alfa\", wave: \"01.zx=ud.23.456789\" }, {name: 'clk', wave: 'p.....|P..'}, {name: 'dat', wave: 'x.345x|=.x', data: ['head', 'body', 'tail', 'data']}, {name: 'req', wave: '0.1..0|1.0'}, {name: 'ack', wave: '1.....|01.'} ]} 的效果 {signal: [ {name: \"Alfa\", wave: \"01.zx=ud.23.456789\" }, {name: 'clk', wave: 'p.....|P..'}, {name: 'dat', wave: 'x.345x|=.x', data: ['head', 'body', 'tail', 'data']}, {name: 'req', wave: '0.1..0|1.0'}, {name: 'ack', wave: '1.....|01.'} ]} 信号分组 { signal: [ { name: 'clk', wave: 'p..Pp..P'}, ['Master', ['ctrl', {name: 'write', wave: '01.0....'}, {name: 'read', wave: '0...1..0'} ], { name: 'addr', wave: 'x3.x4..x', data: 'A1 A2'}, { name: 'wdata', wave: 'x3.x....', data: 'D1' }, ], ['Slave', ['ctrl', {name: 'ack', wave: 'x01x0.1x'}, ], { name: 'rdata', wave: 'x.....4x', data: 'Q2'}, ] ]} { signal: [ { name: 'clk', wave: 'p..Pp..P'}, ['Master', ['ctrl', {name: 'write', wave: '01.0....'}, {name: 'read', wave: '0...1..0'} ], { name: 'addr', wave: 'x3.x4..x', data: 'A1 A2'}, { name: 'wdata', wave: 'x3.x....', data: 'D1' }, ], ['Slave', ['ctrl', {name: 'ack', wave: 'x01x0.1x'}, ], { name: 'rdata', wave: 'x.....4x', data: 'Q2'}, ] ]} 周期与相位控制 DDR Read transaction时序图的代码 { signal: [ { name: \"CK\", wave: \"P.......\", period: 2 }, { name: \"CMD\", wave: \"x.3x=x4x=x=x=x=x\", data: \"RAS NOP CAS NOP NOP NOP NOP\", phase: 0.5 }, { name: \"ADDR\", wave: \"x.=x..=x........\", data: \"ROW COL\", phase: 0.5 }, { name: \"DQS\", wave: \"z.......0.1010z.\" }, { name: \"DQ\", wave: \"z.........5555z.\", data: \"D0 D1 D2 D3\" } ]} { signal: [ { name: \"CK\", wave: \"P.......\", period: 2 }, { name: \"CMD\", wave: \"x.3x=x4x=x=x=x=x\", data: \"RAS NOP CAS NOP NOP NOP NOP\", phase: 0.5 }, { name: \"ADDR\", wave: \"x.=x..=x........\", data: \"ROW COL\", phase: 0.5 }, { name: \"DQS\", wave: \"z.......0.1010z.\" }, { name: \"DQ\", wave: \"z.........5555z.\", data: \"D0 D1 D2 D3\" } ]} 标题,脚注和缩放 {signal: [ {name:'clk', wave: 'p....' }, {name:'Data', wave: 'x345x', data: 'a b c' }, {name:'Request', wave: '01..0' } ], config: { hscale: 3}, head:{ text:'WaveDrom example', tick:0, }, foot:{ text:'Figure 100', tock:9 }, } {signal: [ {name:'clk', wave: 'p....' }, {name:'Data', wave: 'x345x', data: 'a b c' }, {name:'Request', wave: '01..0' } ], config: { hscale: 3}, head:{ text:'WaveDrom example', tick:0, }, foot:{ text:'Figure 100', tock:9 }, } 带箭头 { signal: [ { name: 'A', wave: '01........0....', node: '.a........j' }, { name: 'B', wave: '0.1.......0.1..', node: '..b.......i' }, { name: 'C', wave: '0..1....0...1..', node: '...c....h..' }, { name: 'D', wave: '0...1..0.....1.', node: '....d..g...' }, { name: 'E', wave: '0....10.......1', node: '.....ef....' } ], edge: [ 'a~b t1', 'c-~a t2', 'c-~>d time 3', 'd~-e', 'e~>f', 'f->g', 'g-~>h', 'h~>i some text', 'h~->j' ] } { signal: [ { name: 'A', wave: '01........0....', node: '.a........j' }, { name: 'B', wave: '0.1.......0.1..', node: '..b.......i' }, { name: 'C', wave: '0..1....0...1..', node: '...c....h..' }, { name: 'D', wave: '0...1..0.....1.', node: '....d..g...' }, { name: 'E', wave: '0....10.......1', node: '.....ef....' } ], edge: [ 'a~b t1', 'c-~a t2', 'c-~>d time 3', 'd~-e', 'e~>f', 'f->g', 'g-~>h', 'h~>i some text', 'h~->j' ] } 组合逻辑电路 { assign:[ [\"out\", [\"|\", [\"&\", [\"~\", \"a\"], \"b\"], [\"&\", [\"~\", \"b\"], \"a\"] ] ] ]} { assign:[ [\"out\", [\"|\", [\"&\", [\"~\", \"a\"], \"b\"], [\"&\", [\"~\", \"b\"], \"a\"] ] ] ]} { assign:[ [\"out\", [\"XNOR\", [\"NAND\", [\"INV\", \"a\"], [\"NOR\", \"b\", [\"BUF\",\"c\"]] ], [\"AND\", [\"XOR\", \"d\", \"e\", [\"OR\",\"f\",\"g\"]], \"h\" ] ] ] ]} { assign:[ [\"out\", [\"XNOR\", [\"NAND\", [\"INV\", \"a\"], [\"NOR\", \"b\", [\"BUF\",\"c\"]] ], [\"AND\", [\"XOR\", \"d\", \"e\", [\"OR\",\"f\",\"g\"]], \"h\" ] ] ] ]} 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-28 17:02:32 "},"Coding/LangsMark/MD/PlotVariousChart.html":{"url":"Coding/LangsMark/MD/PlotVariousChart.html","title":"使用mermaid绘制流程图/脑图","keywords":"","body":"使用mermaid绘制流程图/脑图 mermaid.js是一个JS脚本. 代码块标识: mermaid mermaid流程图(flowchart)的折线变成贝塞尔曲线: mermaid.min.js中的 flowchart:{... curve:\"linear\"}变成flowchart:{... curve:\"basis\"}. 示例1:节点,连线,子图的样式控制 代码 graph LR; subgraph line A1 --> B1 A2 --- B2 A3 -.- B3 A4 -.-> B4 A5 ==> B5 A6 -- 描述 --- B6 A7 -- 描述 --> B7 A8 -. 描述 .-> B8 A9 == 描述 ==> B9 end subgraph node C1[带文本的矩形] C2(带文本的圆角矩形) C3>带文本的不对称的矩形] C4{带文本的菱形} C5((带文本的圆形)) C1 --> A1 C1 --> A2 C2 --> A2 C3 --> A3 end style C2 fill:#ccf,stroke:#f66,stroke-width:2px,stroke-dasharray: 5, 5; 对应的流程图 graph LR; subgraph line A1 --> B1 A2 --- B2 A3 -.- B3 A4 -.-> B4 A5 ==> B5 A6 -- 描述 --- B6 A7 -- 描述 --> B7 A8 -. 描述 .-> B8 A9 == 描述 ==> B9 end subgraph node C1[带文本的矩形] C2(带文本的圆角矩形) C3>带文本的不对称的矩形] C4{带文本的菱形} C5((带文本的圆形)) C1 --> A1 C1 --> A2 C2 --> A2 C3 --> A3 end style C2 fill:#ccf,stroke:#f66,stroke-width:2px,stroke-dasharray: 5, 5; 示例2:统一样式控制 代码 graph LR classDef default fill:#f90,stroke:#555,stroke-width:4px; classDef Cssinput fill:#ccf,stroke:#f66,stroke-width:2px,stroke-dasharray:5,5; classDef Cssprint fill:#ed6,stroke:#333,stroke-width:0px; start(\"fa:fa-twitter start\") --> input[输入A,B,C] input --> conditionA{A是否大于B} conditionA -- YES --> conditionC{A是否大于C} conditionA -- NO --> conditionB{B是否大于C} conditionC -- YES --> printA[输出A] conditionC -- NO --> printC[输出C] conditionB -- YES --> printB[输出B] conditionB -- NO --> printC[输出C] printA --> stop(\"fa:fa-camera-retro end\") printC --> stop printB --> stop class input Cssinput; class printA,printB,printC Cssprint; 对应的图 graph LR classDef default fill:#f90,stroke:#555,stroke-width:4px; classDef Cssinput fill:#ccf,stroke:#f66,stroke-width:2px,stroke-dasharray:5,5; classDef Cssprint fill:#ed6,stroke:#333,stroke-width:0px; start(\"fa:fa-twitter start\") --> input[输入A,B,C] input --> conditionA{A是否大于B} conditionA -- YES --> conditionC{A是否大于C} conditionA -- NO --> conditionB{B是否大于C} conditionC -- YES --> printA[输出A] conditionC -- NO --> printC[输出C] conditionB -- YES --> printB[输出B] conditionB -- NO --> printC[输出C] printA --> stop(\"fa:fa-camera-retro end\") printC --> stop printB --> stop class input Cssinput; class printA,printB,printC Cssprint; 使用mermaid.js绘制序列图 代码 sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! 对应的序列图为 sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! 使用mermaid.js画甘特图 代码: gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d 对应的甘特图为: gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d 使用mermaid.js画日程图 journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me 对应的图 journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me 使用mermaid.js画饼图 代码 pie title Pie Chart \"Dogs\" : 386 \"cats\" : 567 \"rabbit\" : 700 \"pig\":365 \"tiger\" : 15 对应的饼图: pie title Pie Chart \"Dogs\" : 386 \"cats\" : 567 \"rabbit\" : 700 \"pig\":365 \"tiger\" : 15 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-26 09:13:13 "},"Coding/LangsMark/MD/UseFontAwesomeInMD.html":{"url":"Coding/LangsMark/MD/UseFontAwesomeInMD.html","title":"在Markdown中使用FontAwesome","keywords":"","body":"在Markdown中使用FontAwesome 准备 要在 Markdown 文档中输入 Font Awesome，需要在文档中任意位置贴粘入如下语句（可以放在文档结尾处，以不影响直接在 Markdown 文档中的阅读）. 获取符号名称 在符号列表中搜索,获得符号编码. 之后就可以直接插入了,代码    符号格式 尺寸 可选项fa-xs,fa-sm,fa-lg,fa-2x,fa-3x,...,fa-10x    转动    首字下沉 Ais the first letter in alphabet. Ais the first letter in alphabet. 文末彩蛋 两张并排的图片 对应的显示 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-26 21:28:04 "},"Coding/LangsMark/MD/UseJavascriptInMD.html":{"url":"Coding/LangsMark/MD/UseJavascriptInMD.html","title":"在Markdown中使用Javascript","keywords":"","body":"在Markdown中使用Javascript 在VS code的Markdown Preview Enhanced中,不会实时渲染,但是在Gitbook生成的html中已经可以实时渲染. 插入wavedrom时序图 在Markdown文件的末尾放入以下代码 在要插入时序图的位置,插入以下代码 {signal: [ {name: \"Alfa\", wave: \"01.zx=ud.23.456789\" }, {name: 'clk', wave: 'p.....|P..'}, {name: 'dat', wave: 'x.345x|=.x', data: ['head', 'body', 'tail', 'data']}, {name: 'req', wave: '0.1..0|1.0'}, {name: 'ack', wave: '1.....|01.'} ]} 渲染效果: {signal: [ {name: \"Alfa\", wave: \"01.zx=ud.23.456789\" }, {name: 'clk', wave: 'p.....|P..'}, {name: 'dat', wave: 'x.345x|=.x', data: ['head', 'body', 'tail', 'data']}, {name: 'req', wave: '0.1..0|1.0'}, {name: 'ack', wave: '1.....|01.'} ]} 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-06 14:43:33 "},"Coding/LangsMark/QML/":{"url":"Coding/LangsMark/QML/","title":"QML","keywords":"","body":"资源列表 回到首页 Qt Quick开发教程1:安卓开发环境的配置 Qt Quick开发教程2:QML语法 Qt Quick开发教程3:导出C++到QML QtQuickTutorial_4_QML_DesignRules.pdf assets 资源(右键打开或下载) sshot-1.png sshot-2.png 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsMark/QML/QtQuickTutorial_1_DevEnvDeploy.html":{"url":"Coding/LangsMark/QML/QtQuickTutorial_1_DevEnvDeploy.html","title":"Qt Quick开发教程1:安卓开发环境的配置","keywords":"","body":"Qt Quick开发教程1:安卓开发环境的配置 Qt Widget已发展成熟，但不适合在移动设备(Android 手机、平板)上使用。Qt Quick使用QML的开发方式。 现在对Android开发环境进行配置1。 所需文件: Java SE Development Kit (JDK) version 6, or later. You can also use OpenJDK on Linux. Gradle for building application packages for Android devices (APK). Gradle is delivered with Qt 5.9, and later. Because Gradle scripts are not delivered with Android SDK Tools since version 26.0.0, they are delivered with Qt 5.9 and 5.6.3. Note: Using Ant to build APKs is no longer supported.。 A tool chain for building applications for Android devices provided by the Android NDK from Google. Android SDK Tools Platform tools Build tools At least one SDK platform Android Debug Bridge (ADB) driver on the Windows platform to enable USB debugging. The default USB driver on Windows does not allow debugging. After installing the driver, try running a few basic adb commands to check it. 这里使用的分别是： qt-opensource-windows-x86-5.11.0.exe jdk-8u171-windows-x64.exe; gradle-4.4-all.zip; android-ndk-r17-windows-x86_64.zip android-sdk_r24.4.1-windows.zip adb driver.Qt的安装 安装JDK和JRE 配置一下环境变量: JAVA_HOME 值： C:\\Program Files\\Java\\jdk1.8.0_171 CLASSPATH 值：.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar; 安装完成后，在命令行中输入java -version和javac -version，可以查看安装的版本。如果不显示版本号，则未安装完成，可能是环境变量未设置好。安装Gradle2 下载好gradle-4.4-all.zip，然后解压到D:/Programs/Gradle目录。 配置环境变量PATH，添加目录D:/Programs/Gradle。 在命令行中输入gradle -v查看版本号，以验证安装完成。安装NDK 直接解压到D:\\Program\\Android_NDK即可。安装Android sdk 将android-sdk_r24.4.1-windows.zip直接解压到D:\\Program\\Android_SDK即可。 配置一下环境变量: ANDROID_HOME 值： D:\\Program\\Android_SDK\\android-sdk-windows 双击SDK Manager.exe，Option里选择HTTP代理地址为mirrors.neusoft.edu.cn，端口为80，勾选\"Force HTTPS\"选项，然后安装你需要的SDK Tools,SDK Platform-tools,SDK platform及Android ..(API 2),安装Android Support Repository，Google Repository和Google USB Driver，Emulator等。 如果双击时一闪而过，请将android-sdk_r24.4.1-windows.zip再重新解压到该目录，冲突文件进行覆盖。 现在的Android SDK Tools版本为24.4.1，不要更新，以免Qt不兼容。安装ADB driver 该驱动用于调试，安装后方可以连接手机进行调试。 安装后在命令行运行adb　version进行检查。 配置Qt 打开Qt creator，工具>>选项>>设备； 添加Android SDK路径； 添加Android NDK路径； 添加JDK路径。 工具>>选项>>构建与运行 测试环境 新建工程：Qt Quick Application - Empty>>Build system选择qmake，选择构建套件(Kits)，这里将Desktop和Android都勾选。 将main.qml更改为： ```xml import QtQuick 2.9 import QtQuick.Window 2.2 Window { visible: true width: 640 height: 480 title: qsTr(\"Hello World\") Text { anchors.centerIn: parent text: qsTr(\"Hello Android\") } MouseArea { anchors.fill: parent onClicked: Qt.quit() } } ``` 左下角按钮先选择在Desktop上构建；试运行。 连接手机打开调试，选择在Android上构建；运行。 如果出现要下载gradle-3.4-bin.zip的情况，将其复制到C:\\Users\\CharleeChan.gradle\\wrapper\\dists\\gradle-3.4-bin\\aeufj4znodijbvwfbsq3044r0。 如果你的手机是Android 9版本，可以按以下设置。 1. https://doc.qt.io/qtcreator/creator-developing-android.html ↩ 2. https://gradle.org/install/ ↩ 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-29 08:50:25 "},"Coding/LangsMark/QML/QtQuickTutorial_2_QML_Basics.html":{"url":"Coding/LangsMark/QML/QtQuickTutorial_2_QML_Basics.html","title":"Qt Quick开发教程2:QML语法","keywords":"","body":"Qt Quick开发教程2:QML语法 // 下面是导入语句 import QtQuick 2.9 import QtQuick.Window 2.2 /* QML文档可以看做是一个QML对象树,这里创建了Window根对象 和它的子对象Text */ Window { visible: true width: 640 height: 480 title: qsTr(\"Hello World\") Text { id: text1 text: qsTr(\"hello QML!\") } } import语句 使用QML需要导入QtQuick模块。 如果需要使用Window，则还要导入QtQuick.Window 模块 版本号指示了本代码使用的Qt模块版本，Qt模块的版本是向下兼容的。 QML数据类型 基本类型 int,string等你熟悉的类型和QML模块自带的基本类型如date,point,rect,size等类型。 QML对象类型 定义一个对象：类型名称{对象特性}。对象中可以包含其他对象。如，上面代码中Window对象中包含了一个Text对象。 JavaScript类型 QML支持JavaScript对象和数组，可以通过var 类型创建并存储任何标准的JavaScript类型。 import QtQuick 2.0 Item { property var theArray: [] property var theDate: new Date() Component.onCompleted: { for (var i = 0; i 属性 每个对象可以有一或多个属性。 属性:值的写法可以给属性赋值，可以是静态值，也可以是表达式。 每个属性的值可以使用本对象的值计算，也可用其他对象的值参与计算 注意，每个对象都有一个id，你可以理解为一个对象的id是它特殊的属性。例如前面代码中Text 对象的 id 为 text1，所以可以在其他对象中通过 text1.text 来获取 Text 对象中的 text 属性的值,但无法通过text1.id 来获取 id 的值。 注释 注释的写法与C++相似。 单行注释：// 多行注释：/和/ 布局 QML的主要功能是用来布局的，它将替代ui_mainwindow.ui进行UI的渲染。 anchors: 将对象锚定 anchors是一种对象的类。它可用的属性有： 属性 值的类型 举例 anchors.top AnchorLine obj1.bottom - 将其的top与对象obj1的bottom锚定在一起 anchors.bottom AnchorLine obj1.bottom - 将其的top与对象obj1的bottom锚定在一起 anchors.left AnchorLine obj1.left - 将其的left与对象obj1的left锚定在一起 anchors.right AnchorLine obj1.left - 将其的right与对象obj1的left锚定在一起 anchors.horizontalCenter AnchorLine obj1.horizontalCenter - 将其的horizontalCenter与对象obj1的horizontalCenter锚定在一起 anchors.verticalCenter AnchorLine obj1.horizontalCenter - 将其的verticalCenter与对象obj1的verticalCenter锚定在一起 anchors.baseline AnchorLine anchors.fill Item parent - 将其父对象填充 anchors.centerIn Item parent - 表示在其父对象的中心 anchors.margins real anchors.topMargin real anchors.bottomMargin real anchors.leftMargin real anchors.rightMargin real anchors.horizontalCenterOffset real anchors.verticalCenterOffset real anchors.baselineOffset real anchors.alignWhenCentered bool 测试 import QtQuick 2.9 import QtQuick.Window 2.2 Window { visible: true width: 640 height: 480 title: qsTr(\"Hello World\") Text { id: text1 anchors.centerIn: parent text: qsTr(\"Hello Android\") font.bold: true font { pointSize: 14; capitalization: Font.AllUppercase } Behavior on rotation { NumberAnimation { duration: 500 } } } Rectangle { id: colorRect width: 20 * 2 height: width radius: 20 border.color: \"green\" anchors.left: text1.right anchors.leftMargin: 10 anchors.verticalCenter: text1.verticalCenter MouseArea { anchors.fill: parent onClicked: { console.debug(\"colorRect: \", parent.border.color) text1.rotation += 360 text1.color = parent.border.color } } Rectangle { width: 12 * 2 height: width radius: 12 color: parent.border.color anchors.centerIn: parent } } } 测试一下上述代码的效果。 添加图片 在源码目录放置文件夹images，将图片放置其中。在qml.qrc上右键选择Open in Editor，添加资源。 然后在qml文件中添加以下代码： Image { id: backImg source: \"images/bg1.png\" width: parent.width anchors.bottom: parent.bottom fillMode: Image.PreserveAspectFit //缩放时保留宽高比 } 自定义对象类型 在项目里右键/，添加新文件，选择Qt类，然后选择QML File。文件名为ColorText。 然后将下列代码拷贝进去。 import QtQuick 2.9 Item { id: root Text { id: text1 anchors.centerIn: parent text: qsTr(\"Hello Android\") font.bold: true font { pointSize: 14; capitalization: Font.AllUppercase } Behavior on rotation { NumberAnimation { duration: 500 } } } Rectangle { id: colorRect width: 20 * 2 height: width radius: 20 border.color: \"green\" anchors.left: text1.right anchors.leftMargin: 10 anchors.verticalCenter: text1.verticalCenter MouseArea { anchors.fill: parent onClicked: { console.debug(\"colorRect: \", parent.border.color) text1.rotation += 360 text1.color = parent.border.color } hoverEnabled: true onEntered: { parent.width = 32 parent.color = \"black\" } onExited: { parent.width = 40 parent.color = \"white\" } } Rectangle { width: 12 * 2 height: width radius: 12 color: parent.border.color anchors.centerIn: parent } } } 在main.qml中添加以下代码： import QtQuick 2.9 import QtQuick.Window 2.2 Window { visible: true width: 640 height: 480 title: qsTr(\"Hello World\") ColorText { anchors.centerIn: parent } } 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-29 08:46:48 "},"Coding/LangsMark/QML/QtQuickTutorial_3_QML_CPP.html":{"url":"Coding/LangsMark/QML/QtQuickTutorial_3_QML_CPP.html","title":"Qt Quick开发教程3:导出C++到QML","keywords":"","body":"Qt Quick开发教程3:导出C++到QML 元对象系统(Meta-Object System)：只要一个CPP类进入了元对象系统，类的方法和属性就可以在QML中访问。 1 导出 类 到QML 要导出的类需要有以下这种形式： class QQuickText : public QQuickImplicitSizeItem //必须继承自QObject类或QObject派生类 { Q_OBJECT //必须使用Q_OBJECT宏 Q_PROPERTY(type name READ getFunction WRITE setFunction RESET resetFunction NOTIFY notifySignal) Q_PROPERTY(QString text READ text WRITE setText NOTIFY textChanged) /*定义元对象系统可访问的属性,定义了一个类型为QString的名为text的属性, 通过text()和setText()进行访问和赋值,当text的内容改变,用户要触发textChanged信号,以通知QML该属性已改变*/ Q_PROPERTY(QFont font READ font WRITE setFont NOTIFY fontChanged) //... public: QQuickText(QQuickItem *parent=0); ~QQuickText();//构造函数与析构函数 enum HAlignment { AlignLeft = Qt::AlignLeft, AlignRight = Qt::AlignRight, AlignHCenter = Qt::AlignHCenter, AlignJustify = Qt::AlignJustify }; Q_ENUM(HAlignment) //定义元对象系统可访问的枚举类型 QString m_text; //text()和setText()不能被QML访问 QString text() const{ return m_text; } void setText(const QString & text) { m_text = text; emit textChanged(); } //... //doLayout()可被QML访问 Q_INVOKABLE void doLayout(); // ### Qt 6: remove //所有signals均可以被QML访问 signals: //... //所有slots均可以被QML访问 slots: //... } 类实现完成之后，一般在main.cpp里进行注册 //qmlRegisterType(\"uri\",1,0,\"qmlName\"); qmlRegisterType(\"PackageName\",1,0,\"qmlName\"); 要在QML中使用，还需要再QML文件中导入： import PackageName 1.0 Rectangle{ width:360 height:360 qmlName{ id:... //PropertyName: text:... } } 2 导出 对象/变量 到QML 以下是将Cpp中名为objectName2的对象/变量导出到QML中objectName1的步骤： 1 注册属性: 在main.cpp中engine.load...之前添加一句: engine.rootContext()->setContextProperty(\"objectName1\",objectName2); 2 使用属性： 导出的属性可以直接使用，与属性关联的对象，它的信号，槽，可调用方法，属性均可以在QML使用。 导出QML到C++ 要在C++中使用QML, import QtQuick 2.2 import QtQuick.Controls 1.2 import QtQuick.Window 2.1 Window{ obejectName: \"rootObject\" width: 360 height: 360 visible: true Text{ objectName: \"textLabel\" text: \"Hello World\" anchors.centerIn: parent font.pixelSize: 26 } Button{ anchors.right: parent.right anchors.rightMargin: 4 anchors.bottom: parent.bottom anchors.bottomMargin: 4 text: \"exit\" objectName: \"quitButton\" } } 在Cpp中将通过对象名objectName来访问其属性。 要访问该页面的rootObject及其他Object，一般在main.cpp中实现： //Step1: 找rootObject QObject *root = NULL; QList rootObjects = engine.rootObjects(); int count = rootObjects.size(); for(int i=0;iobjectName() == \"rootObject\") { root = rootObjects.at(i); break; } } //Step2: 找object QObject *quitButton = root->findChild(\"quitButton\"); //Step3: Process if(quitButton) { QObject::connect(quitButton, SIGNAL(clicked(),&app,SLOT(quit()))); } //Step2: 找Object QObject *textLabel = root->findChild(\"textLabel\"); //Step3: Process if(textLabel) { textLabel->setProperty(\"color\", QColor::fromRgb(255,0,0)); bool bRet = QMetaObject::invokeMethod(textLabel,\"doLayout\"); } 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-29 08:47:14 "},"Coding/LangsMark/XML/":{"url":"Coding/LangsMark/XML/","title":"XML","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsScript/":{"url":"Coding/LangsScript/","title":"脚本","keywords":"","body":"资源列表 回到首页 Bash CMD JS 把博客园装饰得美丽大方 Matlab PHP Python Python开发环境的配置 pyplot在一个坐标系里画多个子图 res 资源(右键打开或下载) 1.png get-pip.py SQL TCL 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsScript/Bash/":{"url":"Coding/LangsScript/Bash/","title":"Bash","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsScript/CMD/":{"url":"Coding/LangsScript/CMD/","title":"CMD 命令行","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsScript/JS/":{"url":"Coding/LangsScript/JS/","title":"Javascript/QScript","keywords":"","body":"资源列表 回到首页 把博客园装饰得美丽大方 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsScript/JS/DecorateYourCnblogs.html":{"url":"Coding/LangsScript/JS/DecorateYourCnblogs.html","title":"把博客园装饰得美丽大方","keywords":"","body":"把博客园装饰得美丽大方 使用Github 开源项目 装点你的博客园. 以下是安装 步骤: 本主题需要JS权限，没有的请先在博客园管理后台申请权限。 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2020-12-31 14:48:07 "},"Coding/LangsScript/Matlab/":{"url":"Coding/LangsScript/Matlab/","title":"Matlab","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsScript/PHP/":{"url":"Coding/LangsScript/PHP/","title":"PHP","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsScript/Python/":{"url":"Coding/LangsScript/Python/","title":"Python","keywords":"","body":"资源列表 回到首页 Python开发环境的配置 pyplot在一个坐标系里画多个子图 res 资源(右键打开或下载) 1.png get-pip.py 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsScript/Python/DevEnvDeploy.html":{"url":"Coding/LangsScript/Python/DevEnvDeploy.html","title":"Python开发环境的配置","keywords":"","body":"Python开发环境的配置 Python简介 Python是一种脚本语言，脚本文件名后缀为.py； 与C语言不同，它不需要编译链接的过程，而是由一个应用程序直接对代码进行解释，然后执行；这个用来解释脚本代码并执行的应用程序叫做解释器。 通常，为了代码可读性，把一个很长的脚本文件分成多个脚本文件，几个脚本组合成一个软件包，叫做模块。一个模块一般是一个文件夹。 有许多通用的模块，会随着Python的官方版本发布，形成内置模块。 还有一些用处比较专业的模块，就是第三方模块，一般使用PIP进行第三方模块的安装，更新，卸载等。 笔者推荐使用 VScode 进行 Python 程序的开发。 环境系统：Windows 10 x64 Enterprise。 下载并安装便携版Python 去Python官网，在左侧Stable Releases一栏下载Python的可移植包Windows x86-64 embeddable zip file，根据需要选择Python版本，这里下载的是python-3.6.8-embed-amd64.zip，大小只有不到7MB。 安装Python：解压 zip 文件到你想安装的路径，重命名文件夹为Python,可以看到其中已经有一个 python.exe ，在CMD中定位到此Python文件夹，输入python后按回车，进入python命令行环境，输入以下命令: import sys print('hello, python!') print(sys.path) 按回车，print(sys.path)可以看到Python 模块的路径，包括了python36.zip及本程序的目录Python。 双击打开python36.zip，可以看到其中已经内置了一些基本的模块，包括json,html等。 设置环境变量PATH：添加该Python目录到系统环境变量Path(或PATH，不区分大小写)。 设置环境变量之后，以后在任意路径打开命令行，输入python，都会调用该PATH中包含的路径下的python.exe。如果没有打开Python命令行，你需要重启系统以更新环境变量的设置。 你也可以把步骤2中的代码写入一个脚本文件hello.py，然后在该脚本文件所在路径打开命令行，执行python hello.py，让解释器执行该脚本。 安装第三方Python模块 安装模块管理工具PIP:下载get-pip.py或get-pip.py到文件夹Python中，在CMD中定位到此Python文件夹,运行python get-pip.py，安装完成后修改python36._pth的内容为： python36.zip . # Uncomment to run site.main() automatically import site 该文件中定义了python解释器的搜索路径，包括 python36.zip文件包，.表示当前路径，以及site指定的路径。 可以在此文件中任意添加路径,以包含你自定义的包,因此遇到ModuleNotFoundError: No module named错误时,可尝试修改此文件. 可以看到Python/Scripts目录下已经有pip.exe等几个pip应用程序。把该Python/Scripts目录也添加到系统环境变量PATH。 安装第三方模块：使用pip管理python软件包，直接在cmd窗口中输入pip命令，会显示pip所有的参数使用方法； 模块的安装包文件名是.whl,你可以去以下站点下载要安装的包 Python Package Index 清华镜像站 阿里镜像源 以下是常用的pip命令： pip install [PackageName] # 安装某个模块 pip install [PackageName]==[VersionNum] # 安装指定版本的模块 pip install --upgrade [PackageName] # 升级某个模块 pip install [Package.whl] # 根据本地安装文件安装 pip show [PackageName] # 展示已安装的某个模块的信息 pip uninstall [PackageName] # 卸载某个模块 pip list # 列出已安装的模块 pip list --outdated # 查看有新版本的第三方库 pip download [PackageName] # 下载某个模块 以下是常用的第三方模块 pip install pillow # 图像处理标准库 pip install requests # 访问网络资源 pip install matplotlib # 数据2维可视化，作图神器 pip install numpy # 数组与矩阵运算 pip install sympy # 强大的符号计算体系完成诸如多项式求值、求极限、解方程、求积分、微分方程、级数展开、矩阵运算等等 pip install SciPy # 基于numpy 信号处理，数学、科学、工程计算功能库 pip install pandas # 数据分析高层次应用库 pip install Tensorflow # 机器学习研究，能够更快更好地将科研原型转化为生产项目 pip install pyspider # 强大的Web页面爬取系统 pip install BeautifulSoup #HTML和XML的解析库 pip install Tkinter # 可视化界面 pip install PySide # PyQt5的免费版 pip install PyQt5 # Qt开发框架的Python接口 pip install PyInstaller # 将 Python 源文件打包，通过对源文件打包， Python 程序可以在没有安装 Python 的环境中运行 pip install pipreqs #分析python文件依赖关系 配置PIP安装软件资源站(清华): 直接在user目录中创建一个pip目录，如：C:\\Users\\xx\\pip，新建文件pip.ini，内容如下 [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple 在VS Code中开发Python 打开VS Code，点击左侧插件按钮，安装插件Python； 安装Pylance之后，在VS Code中按Ctrl+,键，打开设置，输入python auto complete搜索，点击Edit in setting.json，在 \"python.analysis.extraPaths\"`的方括号中添加以下两行，加入Python路径: \"python.analysis.extraPaths\": [ \"D:\\\\Program\\\\Python\\\\Scripts\", \"D:\\\\Program\\\\Python\\\\Lib\\\\site-packages\" ] 代码出错提示：打开命令行，输入 pip install flake8，安装flake8成功后，打开VScode，按Ctrl+,键，打开设置，输入python linting flake8 enabled，勾选选项。 自动格式化代码：打开命令行，输入pip install yapf，安装yapf之后，打开VScode，按Ctrl+,键，打开设置，输入python formatting provider，后面编辑Python代码时，在VScode中按Alt+Shift+F即可自动格式化代码。 在安装完成基础环境之后，你可能会想 安装Tensorflow开发环境。 安装Pytorch开发环境。 打包你的脚本文件给一个没有安装Python环境的机器中运行。 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-08 17:25:07 "},"Coding/LangsScript/Python/Matplotlib_Usage.html":{"url":"Coding/LangsScript/Python/Matplotlib_Usage.html","title":"pyplot在一个坐标系里画多个子图","keywords":"","body":"pyplot在一个坐标系里画多个子图 代码 import numpy as np import matplotlib.pyplot as plt x = np.linspace(0, 10) plt.axes([0.1, 0.5, 0.8, 0.4], ylim=(-1.2, 1.2)) plt.grid(True) plt.plot(np.sin(x)) plt.axes([0.1, 0.1, 0.8, 0.4], ylim=(-1.2, 1.2)) plt.grid(True) plt.plot(np.cos(x)) plt.show() 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-06 17:29:24 "},"Coding/LangsScript/SQL/":{"url":"Coding/LangsScript/SQL/","title":"SQL","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsScript/TCL/":{"url":"Coding/LangsScript/TCL/","title":"TCL","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsStyle/":{"url":"Coding/LangsStyle/","title":"样式表","keywords":"","body":"资源列表 回到首页 CSS 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/LangsStyle/CSS/":{"url":"Coding/LangsStyle/CSS/","title":"CSS/QSS","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/OtherLibs/":{"url":"Coding/OtherLibs/","title":"库/框架","keywords":"","body":"资源列表 回到首页 OpenCV Pytorch 使用autograd.grad()计算导数与偏导 Pytorch开发环境搭建 Tensorflow Tensorflow开发环境搭建 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/OtherLibs/OpenCV/":{"url":"Coding/OtherLibs/OpenCV/","title":"OpenCV","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/OtherLibs/Pytorch/":{"url":"Coding/OtherLibs/Pytorch/","title":"Pytorch","keywords":"","body":"资源列表 回到首页 使用autograd.grad()计算导数与偏导 Pytorch开发环境搭建 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/OtherLibs/Pytorch/autograd_gradientInPytorch.html":{"url":"Coding/OtherLibs/Pytorch/autograd_gradientInPytorch.html","title":"使用autograd.grad()计算导数与偏导","keywords":"","body":"使用autograd.grad()计算导数与偏导 代码 import torch from torch import autograd x = torch.rand(3, 4) x.requires_grad_() y = torch.sum(x) print(\"-\"*30,\"\\n x= \\n\",x) print(\"-\"*30,\"\\n y= x_1 + x_2 + x_3 +... =\\n\",y) print(\"-\"*30,\"\\n dy/dx= \") print(autograd.grad(outputs=y, inputs=x)[0]) print(\"-\"*30,\"\\n dy/dx= \") print(autograd.grad(outputs=y, inputs=x,grad_outputs=torch.ones_like(y))[0]) y = x[:,0] +x[:,1]**2 print(\"-\"*30,\"\\n x= \\n\",x) print(\"-\"*30,\"\\n y=x[:,0] + x[:,1]**2 =\\n\",y) grad3 = autograd.grad(outputs=y, inputs=x, grad_outputs=torch.ones_like(y), create_graph=True)[0] grad4 = autograd.grad(outputs=grad3, inputs=x, grad_outputs=torch.ones_like(grad3))[0] print(\"-\"*30,\"\\n dy/dx= \") print(grad3) print(\"-\"*30,\"\\n d2y/dx2=\") print(grad4) print(\"-\"*30) 输出为 ------------------------------ x= tensor([[0.6896, 0.3966, 0.2412, 0.5902], [0.0767, 0.2957, 0.2829, 0.3379], [0.1813, 0.3087, 0.8247, 0.9677]], requires_grad=True) ------------------------------ y= x_1 + x_2 + x_3 +... = tensor(5.1931, grad_fn=) ------------------------------ dy/dx= tensor([[1., 1., 1., 1.], [1., 1., 1., 1.], [1., 1., 1., 1.]]) ------------------------------ dy/dx= tensor([[1., 1., 1., 1.], [1., 1., 1., 1.], [1., 1., 1., 1.]]) ------------------------------ x= tensor([[0.6896, 0.3966, 0.2412, 0.5902], [0.0767, 0.2957, 0.2829, 0.3379], [0.1813, 0.3087, 0.8247, 0.9677]], requires_grad=True) ------------------------------ y=x[:,0] + x[:,1]**2 = tensor([0.8468, 0.1642, 0.2765], grad_fn=) ------------------------------ dy/dx= tensor([[1.0000, 0.7931, 0.0000, 0.0000], [1.0000, 0.5914, 0.0000, 0.0000], [1.0000, 0.6174, 0.0000, 0.0000]], grad_fn=) ------------------------------ d2y/dx2= tensor([[0., 2., 0., 0.], [0., 2., 0., 0.], [0., 2., 0., 0.]]) ------------------------------ 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-07 16:33:37 "},"Coding/OtherLibs/Pytorch/DevEnvDeploy.html":{"url":"Coding/OtherLibs/Pytorch/DevEnvDeploy.html","title":"Pytorch开发环境搭建","keywords":"","body":"Pytorch开发环境搭建 本安装包的版本搭配 可视化：满足tensorboardX的要求。 使用Pytorch GPU的版本。 包含Tensorflow GPU的版本。 写在前面 要求已搭建好基本的Python环境，如果你未搭建，点我查看如何搭建基本的Python环境。 可视化要求搭建好Tensorflow环境，点我查看如何搭建Tensorflow环境。 系统: Windows Enterprise 10 x64 CPU：Intel(R) Core(TM) i7-8700 CPU @ 3.20GHz GPU: NVIDIA GeForce GTX 1050 Ti 所以本笔记记录Win10 64位系统下，TensorFlow的GPU版开发环境的搭建。 离线安装所需资源列表 tensorflow_gpu-1.10.0-cp36-cp36m-win_amd64.whl，会同时安装tensorboard版本:1.10.0； cuda_9.2.148_win10.exe； cuda_9.2.148.1_windows.exe.exe； pytorch-1.3.1-py3.6_cuda92_cudnn7_0.tar.bz2; torchvision-0.4.1-py36_cu92.tar.bz2; msgpack-0.6.2-cp36-cp36m-win_amd64.whl. 安装步骤： 在电脑任务栏，右键NVIDIA 控制面板>帮助菜单>系统信息>组件选项卡，可以看到显卡驱动支持的CUDA版本号为9.2。 去NVIDIA CUDA 和NVIDIA CUDNN 分别下载CUDA和CUDNN相应的版本：cuda_9.2.148_win10和patch包；以及cudnn7.2。安装CUDA及patch包；然后将解压Cudnn后得到的三个小文件夹(include,bin,lib)复制到CUDA的安装目录(默认安装目录C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.2)即可； 进入PyTorch官网，依次选择你电脑的配置 然后根据配置，去页面选择文件：找到CUDA版本为9.2，Python版本为3.6，平台为Win64的1.3.1版本的cu92/torch-1.3.1%2Bcu92-cp36-cp36m-win_amd64.whl文件,将其下载下来。 安装: 在该whl文件所在目录打开CMD命令行，执行pip install torch-1.3.1-cu92-cp36-cp36m-win_amd64.whl即可。 安装完成后也许会提示msgpack找不到，需要再额外安装一个，去页面，运行pip install msgpack-0.6.2-cp36-cp36m-win_amd64.whl安装好即可。 去为了进行可视化，去页面下载后pip install torchvision-0.4.1-cp36-cp36m-win_amd64.whl进行安装。 环境测试 输入python并回车，进入PYTHON环境，运行以下命令： import torch torch.__version__ # 应该得到结果'1.4.0+cu92' print(torch.cuda.is_available()) # 应该得到结果True 在Visual Studio Code中，只要有Python插件，即可打开后缀名为ipynb和py的Python代码，而且可以执行Python程序。 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-07 23:17:05 "},"Coding/OtherLibs/Tensorflow/":{"url":"Coding/OtherLibs/Tensorflow/","title":"Tensorflow","keywords":"","body":"资源列表 回到首页 Tensorflow开发环境搭建 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:17 "},"Coding/OtherLibs/Tensorflow/DevEnvDeploy.html":{"url":"Coding/OtherLibs/Tensorflow/DevEnvDeploy.html","title":"Tensorflow开发环境搭建","keywords":"","body":"Tensorflow开发环境搭建 本教程将包含Tensorflow GPU的版本的安装过程。 写在前面 要求已搭建好基本的Python环境，如果你未搭建，点我查看如何搭建基本的Python环境。 系统: Windows Enterprise 10 x64 CPU：Intel(R) Core(TM) i7-8700 CPU @ 3.20GHz GPU: NVIDIA GeForce GTX 1050 Ti 所以本笔记记录Win10 64位系统下，TensorFlow的GPU版开发环境的搭建。 离线安装所需文件 tensorflow_gpu-1.10.0-cp36-cp36m-win_amd64.whl； cuda_9.2.148_win10.exe； cuda_9.2.148.1_windows.exe.exe； cudnn-9.2-windows10-x64-v7.2.1.38.zip； 安装步骤 在电脑任务栏，右键NVIDIA 控制面板>帮助菜单>系统信息>组件选项卡，可以看到显卡驱动支持的CUDA版本号为9.2。 去Github下载一个你想下载的tensorflow的版本，这里分别依次选择tensorflow-windows-wheel/1.10.0/py36/GPU/， 下载cuda92cudnn72avx2文件夹下的*.whl文件，我下载的是tensorflow_gpu-1.10.0-cp36-cp36m-win_amd64.whl，可以看到这里的文件名给出了配置要求：cuda 9.2版本，cudnn要求7.2版本，记下这两个版本号。 去NVIDIA CUDA 和NVIDIA CUDNN 分别下载CUDA和CUDNN相应的版本：cuda_9.2.148_win10和patch包；以及cudnn7.2。安装CUDA及patch包；然后将解压Cudnn后得到的三个小文件夹(include,bin,lib)复制到CUDA的安装目录(默认安装目录C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.2)即可； 进入你.whl文件所在的目录，输入pip install tensorflow_gpu-1.10.0-cp36-cp36m-win_amd64.whl即可安装 在当前环境下输入python进入python编辑环境，输入以下代码进行测试 import tensorflow as tf hello = tf.constant(\"Hello, Tensorflow!\") sess = tf.Session() print(sess.run(hello)) a=tf.constant(10) b = tf.constant(20) print(sess.run(a+b)) 测试环境 对tensorflow说Hello! import tensorflow as tf hello = tf.constant(\"Hello, Tensorflow!\") sess = tf.Session() print(sess.run(hello)) 进一步测试： 首先看看tensorflow是不是正常安装并可以导入了： 测试代码一： import tensorflow as tf a = tf.test.is_built_with_cuda() # 判断CUDA是否可以用 b = tf.test.is_gpu_available( cuda_only=False, min_cuda_compute_capability=None ) # 判断GPU是否可以用 print(a) print(b) 输出结果是： True True 代表CUDA和GPU可用 测试代码二： import tensorflow as tf #Creates a graph. a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a') b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b') c = tf.matmul(a, b) #Creates a session with log_device_placement set to True. sess = tf.Session(config=tf.ConfigProto(log_device_placement=True)) #Runs the op. print(sess.run(c)) 输出结果是： [[22. 28.] [49. 64.]] 利用GPU测试TensorFlow的运行情况 下面是直观的看出代码有没有在使用GPU 测试代码三： import tensorflow as tf with tf.device('/cpu:0'): a = tf.constant([1.0, 2.0, 3.0], shape=[3], name='a') b = tf.constant([1.0, 2.0, 3.0], shape=[3], name='b') with tf.device('/gpu:1'): c = a + b sess =tf.Session(config=tf.ConfigProto(log_device_placement=True)) sess.run(tf.global_variables_initializer()) print(sess.run(c)) 注意： 上述测试代码三中可能报错，你需要更改代码为 sess = tf.Session(config=tf.ConfigProto(allow_soft_placement=True, log_device_placement=True)) 其中 allow_soft_placement=True 表明：计算设备可自行选择，如果没有这个参数，会报错。因为不是所有的操作都可以被放在GPU上，如果强行将无法放在GPU上的操作指定到GPU上，将会报错。 log_device_placement=True 表明：计算设备的日志log文件会实时显示(使用Python命令行时会显示，使用spyder时不显示,使用spyder可以使用性能分析工具进行查看)。 先不急着运行，打开任务管理器，点击 性能 ，找到你自己英伟达显卡的GPU那一栏，点击一下，可以显示GPU的利用情况，正常情况下你没运行什么程序，GPU利用率什么的都是0，没有波澜，然后你运行代码三，会发现GPU利用率开始变化了。 更进一步 上面已经完全测试了windows10系统下tensorflow-gpu的开发环境。如果你想了解的更多一点：可以尝试学习一下这段代码: import tensorflow as tf import numpy as np # 1 collect data x_data = np.float32(np.random.rand(200,2)); y_data = np.matmul(x_data,[[5.2],[9.6]])+3.4; # 2 Ceate model W = tf.Variable(tf.random_uniform([2,1],-1,1)); b = tf.Variable(tf.zeros([1])); y_ = tf.matmul(x_data,W)+b; # 3 loss function loss = tf.reduce_mean(tf.square(y_-y_data)); optimizer = tf.train.GradientDescentOptimizer(0.5); train = optimizer.minimize(loss); # 4 Initialzer init = tf.initialize_all_variables(); sess = tf.Session(config = tf.ConfigProto(allow_soft_placement=True,log_device_placement=True)); sess.run(init); # 5 Train for step in range(0,201): sess.run(train); if step%10 == 0: print(step,np.transpose(sess.run(W)),sess.run(b)); # 6 Output sess.close(); 使用Visual Studio Code进行开发 使用Visual Studio Code也可以进行python的开发。你需要安装Python插件。即可编写代码。编写完成后按F1或Ctrl+Shift+P，调出命令框，输入python: select interpreter来选择解释器，点击之后可以选择你的conda的tensorflow环境下的解释器。在状态栏就可以看到\"Python 3.6.8 64-bit\"字样，表示当前的运行环境。此时按Ctrl + F5运行代码，按F5进行调试。 开心玩耍吧~ 个人使用体验：VS Code比Pycharm还要流畅一些~~ 写在最后 为保证以后该环境不出幺蛾子， 请不要更改GPU驱动 请不要更新GPU驱动 请不要更新GPU驱动 如果你不慎更新了显卡驱动，按此笔记重新安装配置环境。 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-07 22:53:04 "},"SoftTuto/Animation/":{"url":"SoftTuto/Animation/","title":"动画制作软件","keywords":"","body":"资源列表 回到首页 HTML5 PocketAnimation SolidWorks 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Animation/HTML5/":{"url":"SoftTuto/Animation/HTML5/","title":"HTML5","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Animation/PocketAnimation/":{"url":"SoftTuto/Animation/PocketAnimation/","title":"口袋动画-Pocket Animation","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Animation/SolidWorks/":{"url":"SoftTuto/Animation/SolidWorks/","title":"SolidWorks","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Image/":{"url":"SoftTuto/Image/","title":"图像图表软件","keywords":"","body":"资源列表 回到首页 GIMP GIMP快速指南 res 资源(右键打开或下载) GIMP-keys.pdf Mermaid Origin Solidworks Visio 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Image/GIMP/":{"url":"SoftTuto/Image/GIMP/","title":"GIMP","keywords":"","body":"资源列表 回到首页 GIMP快速指南 res 资源(右键打开或下载) GIMP-keys.pdf 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Image/GIMP/GIMPDefaultKeys.html":{"url":"SoftTuto/Image/GIMP/GIMPDefaultKeys.html","title":"GIMP快速指南","keywords":"","body":"GIMP快速指南 打印版 帮助 快捷键 说明 F1 帮助 Shift F1 上下文帮助 选择工具与选区 快捷键 说明 R 矩形选择 E 椭圆形选择 F 自由选择 U 模糊选择/魔术棒 Shift O 按颜色选择 I 智能剪刀 Ctrl A 选中全部 Ctrl I 反向选择 Ctrl Shift A 取消选中 Ctrl Shift L 选择浮动部分 Ctrl Shift L 选择浮动部分 编辑 快捷键 说明 Ctrl Z 撤销上一个操作 Ctrl Y 恢复上一个操作 Ctrl C 复制选择部分 Ctrl X 剪切选择部分 Ctrl V 粘贴到浮动图层 Ctrl H 固定浮动图层 Ctrl Shift C 复制可见部分 Ctrl Shift V 粘贴作为新图像 Ctrl Alt V 粘贴到原位 Delete 清空 Ctrl , 用前景色填充 Ctrl . 用背景色填充 Ctrl ; 用图案填充 绘画工具 快捷键 说明 Shift B 油漆桶填充 A 喷枪 G 渐变工具 N 铅笔 P 刷子/画笔 Shift E 橡皮擦 K 墨水 C 克隆/印章工具 H 修复 Shift U 模糊/锐化 S 污点/涂抹 Shift D 减淡/加深 变换工具 快捷键 说明 Q 对齐 M 移动 Shift M 测量 Shift C 剪裁 Shift R 旋转 Shift S 缩放 Shift H 切变 Shift P 透视 Shift W 3D变换 Shift T 统一变换 Shift L 控制柄变换 Shift F 翻转/镜像 Shift G 框架变换 W 扭曲变换 颜色与综合工具 快捷键 说明 B 路径 T 文本 双击工具按钮 打开工具选项 O 颜色拾取器 X 交换颜色 D 默认颜色 点击调色板 改变至点击颜色 文件 快捷键 说明 Ctrl N 新图像 Ctrl O 打开图像 Ctrl Alt O 作为新图层打开图像 Ctrl D 复制图像 Ctrl 数字键 打开最近图像的第数字个 Ctrl S 保存 Ctrl Shift S 另存为 Ctrl E 导出到 Ctrl Shift S 导出.. Ctrl Q 退出 对话 快捷键 说明 Ctrl L 图层 Ctrl G 渐变 Ctrl P 打印 Ctrl W 关闭窗口 Ctrl Shift T 工具选项 Ctrl Shift B 刷子 Ctrl Shift P 仿照 Ctrl Shift I 信息窗口 Ctrl Shift N 浏览窗口 Enter 设置新值 视图 快捷键 说明 F10 主菜单 Shift F10 or 右键 右键下拉菜单 F11 切换全屏 Shift Q 使能快速掩膜 + 放大 - 缩小 1 原始大小 Ctrl E 调整窗口适合至图像 Ctrl T 使能选区 Ctrl Shift E 调整图像适合至窗口 Shift 滚轮 缩放 Shift J 将图像置于窗口中心 Ctrl 方向键 移动画布 Shift 方向键 移动画布 按下滚轮 拖动 移动画布 按下滚轮 拖动 移动画布 滚轮 垂直移动画布 Ctrl 滚轮 水平移动画布 从尺子拖动到 生成参考线 拖动参考线到尺子 移除参考线 空格 拖动 从尺子中拖下采样点 Ctrl Shift R 使能尺子 Ctrl Shift T 使能参考线 图像 快捷键 说明 Ctrl D 复制图像 Ctrl M 合并可见图层 Ctrl N 新建.. Ctrl Shift N 新建图层 Alt Enter 图像属性 Ctrl Shift D 复制图层 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-16 15:08:09 "},"SoftTuto/Image/Mermaid/":{"url":"SoftTuto/Image/Mermaid/","title":"Mermaid","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Image/Origin/":{"url":"SoftTuto/Image/Origin/","title":"Origin","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Image/Solidworks/":{"url":"SoftTuto/Image/Solidworks/","title":"Solidworks","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Image/Visio/":{"url":"SoftTuto/Image/Visio/","title":"Visio","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Manage/":{"url":"SoftTuto/Manage/","title":"管理类软件","keywords":"","body":"资源列表 回到首页 Git 结合Github Pages使用GitBook 使用Github的基本流程 本Wiki维护教程 res 资源(右键打开或下载) index.js mermaid.min.js mj-single.js Inlook Inlook - 你的个人工作助手 Inlook用户指南 img 资源(右键打开或下载) addaccount.png addaccount2.png addagenda.png button.png changesize.png install.png installing.png login.png loginsuccess.png loginsuccess2.png mainWindow.png mainWindow2.png screen_shot.png sjadd1.png sjadd2.png switchExchange.png tray.png res 资源(右键打开或下载) Outlook 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Manage/Git/":{"url":"SoftTuto/Manage/Git/","title":"Git","keywords":"","body":"资源列表 回到首页 结合Github Pages使用GitBook 使用Github的基本流程 本Wiki维护教程 res 资源(右键打开或下载) index.js mermaid.min.js mj-single.js 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Manage/Git/GitbookUsage.html":{"url":"SoftTuto/Manage/Git/GitbookUsage.html","title":"结合Github Pages使用GitBook","keywords":"","body":"结合Github Pages使用GitBook 参考 概述 GitBook 是一个 Node.js 环境下，用于构建电子书的工具。 GitBook 让你能够使用 Markdown 来编排一本电子书，GitBook 能够根据 Markdown 文档，生成 PDF、ePub 或 Mobi 文档，还可以生成静态网页。 你可以将 GitBook 生成的静态资源放到某个静态网站的托管平台上（如 GitHub Pages），以便他人可以在线阅读你创作的内容。 GitBook 工作在 Node.js 环境下，因此，你需要确保你已经配置好 Node.js 环境。 安装Node.js 下载node.js并安装（可能操作不对，.zip结尾的不知道怎么的不好用，我用的.msi结尾的正常） 测试下是否安装完成, 安装完成后，点击node.exe，输入：console.log(\"Hello,World!\"); 回车能正常显示hello，world就OK 在cmd中设置node.js的文件夹 npm config set prefix \"D:\\Program\\nodejs\\node_modules\\node_global\" npm config set cache \"D:\\Program\\nodejs\\node_modules\\node_cache\" 新增用户环境变量NODE_PATH,值为D:\\Program\\nodejs\\node_global\\node_modules; 设置用户环境变量PATH,把其中node的路径值改成D:\\Program\\nodejs\\node_modules\\node_global 安装 gitbook-cli 通过cmd调用窗口，进入安装nodeJs的目录，输入命令全局安装gitbook：npm install gitbook-cli -g 输入命令：mkdir MyWiki，创建文件夹 执行下面命令，查看 gitbook-cli 的版本，以确定其是否成功安装。 gitbook -V CLI version: 2.3.2 gitbook version: 3.2.3 可能会报错if (cb) cb.apply(this, arguments),　打开polyfills.js文件，在第62-64行调用了这个函数,因此把62-64行注释掉. 4不报错也注释掉. 开始 在CMD中找到你要新建gitbook的位置,执行下面命令，gitbook 将完成一些准备工作。 gitbook init 实际上，上面命令生成了下面 2 个文件。 ├── README.md └── SUMMARY.md README.md 将包含电子书的简介 SUMMARY.md 将包含电子书的目录 有了这两个文件，就是一本结构完整的电子书了。 编辑电子书内容 初始化后的目录中会出现README.md（电子书简介文件）和SUMMARY.md（导航目录文件）两个基本文件。除此之外还可以手动新建其它Glossary.md（书尾的词汇表）、book.json（电子书配置文件）。 电子书的正文内容可以根据自己的喜好创建新的后缀为 .md 文件，如“chapter01.md”，然后用 MarkDown 编写具体的文本内容即可。下面对这些文件分别做详细介绍。 README.md 此文件是简单的电子书介绍，可以把您所制作的电子书做一下简单的描述： # 简介 这是我的第一本使用 GitBook 制作的电子书。 SUMMARY.md 此为电子书的导航目录文件，每当新增一个章节文件就需要向此文件中添加一条记录。对于 Kindle 电子书来说，此文件所呈现的目录结构就是开头的目录内容和“前往”的目录导航。 # Summary * [简介](README.md) * [第一章](section1/README.md) * [第二章](section2/README.md) 如果需要“子章节”可以使用 Tab 缩进来实现（最多支持三级标题），如下所示： # Summary * [第一章](section1/README.md) * [第一节](section1/example1.md) * [第二节](section1/example2.md) * [第二章](section2/README.md) * [第一节](section2/example1.md) Glossary.md 对于电子书内容中需要解释的词汇可在此文件中定义。词汇表会被放在电子书末尾。其格式如下所示： # 电子书 电子书是指将文字、图片、声音、影像等讯息内容数字化的出版物和植入或下载数字化文字、图片、声音、影像等讯息内容的集存储和显示终端于一体的手持阅读器。 # Kindle Amazon Kindle 是由 Amazon 设计和销售的电子书阅读器（以及软件平台）。用户可以通过无线网络使用 Amazon Kindle 购买、下载和阅读电子书、报纸、杂志、博客及其他电子媒体。 book.json “book.json”是电子书的配置文件，可以看作是电子书的原数据，比如 title、description、isbn、language、direction、styles 等，更多点击这里查看。它的基本结构如下所示： { \"title\": \"我的第一本電子書\", \"description\": \"用 GitBook 制作的第一本電子書！\", \"isbn\": \"978-3-16-148410-0\", \"language\": \"zh-tw\", \"direction\": \"ltr\" } 普通章节.md 文件 普通章节.md 文件可以使用您感觉顺手的文本编辑器编写。MarkDown 的写法可以点击这里查看相关示例。每编写一个 .md 文件，不要忘了在SUMMARY.md文件中添加一条记录哦。 电子书封面图片 GitBook 帮助文档建议封面图片的尺寸为 1800*2360 像素并且遵循建议： 没有边框 清晰可见的书本标题 任何重要的文字在小版本中应该可见 图片的格式为 jpg 格式。把图片重命名为cover.jpg放到电子书项目文件夹即可。 预览 执行gitbook serve,用浏览器打开 http://localhost:4000，就可以看到电子书的最终效果了。 生成 执行下面命令，就可以将电子书的内容制作成静态网页，并保存在 _book 目录中。 gitbook build 导出为其他电子书文件 确定电子书没有问题后，可以通过输入以下命令生成 mobi 电子书： gitbook mobi ./ ./MyFirstBook.mobi 如果出现以下错误提示，说明您还未安装 Calibre。由于 GitBook 生成 mobi 格式电子书依赖 Calibre 的 ebook-convert，所以请先点击这里下载安装 Calibre。 Error: Need to install ebook-convert from Calibre Calibre 安装完毕后，对于 Mac OS X 系统，还需要先设置一下软链接： ln -s /Applications/calibre.app/Contents/MacOS/ebook-convert /usr/local/bin 再次运行转换命令，即可生成 mobi 格式电子书。 结合 GitHub Pages GitHub Pages 是 GitHub 提供的静态网站托管服务。 GitHub 上的每个仓库都可以拥有一个 GitHub Pages，对应的 URL 如下：https://.github.io// GitHub Pages 的静态资源支持下面 3 个来源： master 分支 master 分支的 /docs 目录 gh-pages 分支 执行下面命令，在生成静态网页时，将保存的目录指定为 ./docs # 把mds目录下的所有文件编译成为电子书, 输出目录为docs gitbook build ./mds/. ./docs 然后直接推送到 GitHub 仓库。 git push origin master 最后选择仓库的setting,Pages,选择分支main-docs作为主目录,就可以在[username].github.io/[repository name]看到书啦. 将 _book 目录推送到 GitHub 仓库的 gh-pages 分支:git subtree push --prefix=_book origin gh-pages也可以。 更进一步: 使用Gitbook插件定制化页面 GitBook使用基于Node.Js的Gitbook插件对Markdown文件进行渲染. 写配置文件:在根目录新建book.json,在book.json中写入以下代码: { \"plugins\": [ \"back-to-top-button\", \"splitter\", \"code\", \"-lunr\", \"-search\", \"-sharing\", \"toggle-chapters\", \"sharing-plus\", \"search-pro\", \"insert-logo\", \"custom-favicon\", \"pageview-count\", \"tbfed-pagefooter\", \"mind-maps\", \"hide-element\", \"mathjax-single-dollar\", \"forkmegithub\", \"mermaid-gb3\", \"auto-scroll-table\" ], \"pluginsConfig\": { \"insert-logo\": { \"url\": \"./img/logo.png\", \"style\": \"background: none; max-height: 30px; min-height: 30px\" }, \"favicon\": \"./img/inlook.ico\", \"tbfed-pagefooter\": { \"copyright\": \"Copyright &copy charleechan 2021\", \"modify_label\": \"本文最终修订于：\", \"modify_format\": \"YYYY-MM-DD HH:mm:ss\" }, \"forkmegithub\": { \"url\": \"https://github.com/your/repo\" }, \"sharing\": { \"douban\": true, \"facebook\": false, \"google\": false, \"hatenaBookmark\": false, \"instapaper\": false, \"line\": false, \"linkedin\": false, \"messenger\": false, \"pocket\": false, \"qq\": true, \"qzone\": false, \"stumbleupon\": false, \"twitter\": true, \"viber\": false, \"vk\": false, \"weibo\": true, \"whatsapp\": false, \"all\": [ \"facebook\", \"google\", \"twitter\", \"weibo\", \"instapaper\", \"linkedin\", \"pocket\", \"stumbleupon\" ] }, \"hide-element\": { \"elements\": [\".gitbook-link\"] } } } CMD中导航到book.json所在目录,执行命令gitbook install,会自动安装book.json中用到的插件. 当然,也可以使用以下命令单独安装: CMD中导航到book.json所在目录,执行以下命令: npm install gitbook-plugin-mermaid-gb3 # wavedrom 插件, 渲染代码块wavedrom为时序图或电路图 npm install gitbook-plugin-wavedrom # 返回顶部按钮 npm install gitbook-plugin-back-to-top-button # 导航目录折叠 npm install gitbook-plugin-chapter-fold # 侧边栏宽度可调节 npm install gitbook-plugin-splitter # 给代码块增加复制代码按钮和行号 npm install gitbook-plugin-code # 分享功能增强 npm install gitbook-plugin-sharing-plus # 高级搜索,支持中英文,准确率更高 npm install gitbook-plugin-search-pro # 个性化网站导航栏的logo npm install gitbook-plugin-insert-logo # 个性化网站的icon npm install gitbook-plugin-custom-favicon # 个性化文章的页脚, 增加版权和修改时间 npm install gitbook-plugin-tbfed-pagefooter # 文档页面阅读数 npm install gitbook-plugin-pageview-count # 思维导图 npm install gitbook-plugin-mind-maps # 隐藏元素 npm install gitbook-plugin-hide-element # 支持mathjax公式 npm install gitbook-plugin-mathjax-single-dollar # 右上角添加fork me 丝带 npm install gitbook-plugin-forkmegithub-cn # 表格自动加滚动条 npm install gitbook-plugin-auto-scroll-table # 可以复制本代码块到cmd中,会自动安装 由于插件年久失修, 需要执行以下操作来使插件生效. gitbook build 之前, 将文件mermaid.min.js分别拷贝到\\node_modules\\gitbook-plugin-mermaid-gb3\\dist\\mermaid和\\node_modules\\mermaid\\dist目录,进行文件替换. 本命令已经写入文件GitbookBuild.bat,因此在不用每次执行. 如果公式中加了化学方程式，长等号，长箭头，colorbox等，则要在.md的最底部加入以下代码 MathJax.Hub.Config({ TeX: { extensions: [\"extpfeil.js\",\"color.js\",\"mhchem.js\"] }}); 可以修改node_modules\\gitbook-plugin-tbfed-pagefooter\\index.js,在页脚添加自定义内容,可以修改为文件index.js的内容。 问题警告 gitbook 3.2.3版本生成的本地HTML无法跳转,而gitbook 2.6.7版本可以跳转. gitbook 2.6.7版本不能使用search-pro插件,因此不能使用中文搜索功能. 综上, 强烈建议使用gitbook 3.2.3版本, 网站端HTML可以正常跳转的. 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-11 09:19:49 "},"SoftTuto/Manage/Git/GithubUsage.html":{"url":"SoftTuto/Manage/Git/GithubUsage.html","title":"使用Github的基本流程","keywords":"","body":"使用Github的基本流程 下载Git 搜索“Git”，在官网中根据系统版本下载，并双击打开，按默认已勾选组件点下一步; 勾选在Windows命令行窗口中使用Git； 使用推荐的OpenSSL库用于HTTPS连接； 一路默认安装即可。 配置SSH Key 1.如果C:\\uers[user] 没有.ssh文件夹，需要创建SSH Key： ssh-keygen -t rsa -C \"charleechan@163.com\" 2.把生成的key填写到Github中,在右上角头像的Settings的SSH and GPG keys那里填,title随便写,主要是用来注明的 使用命令 `clip 使用Git 命令创建仓库 新建本地仓库 双击打开Git Bash，配置你的GitHub用户： git config --global user.name \"charleechan\" git config --global user.email \"charleechan@163.com\" 键入你要新建仓库的位置，如：cd /d/Code/charleechan.github.io 开始创建代码仓库：git init 关联远程仓库 新建远程仓库，注意不要勾选添加Readme!!!!!注意不要勾选添加Readme!!!!!注意不要勾选添加Readme!!!!! 首先与远程库创建关联：`git remote add origin https://github.com/[Github用户名]/[仓库名]`或`git remote add origin git@github.com:charleechan/charleechan.github.io.git` > 在创建好Github仓库后有两个地址,一个是https的地址,另一个是SSH地址,也就是上面这个地址. 切换到分支git checkout -b main,其中main是分支名 如果勾选了，你需要先将远程库的文件合并到本地库：`git pull --rebase origin main` ,其中main是分支名 在该文件夹下新建代码文件即可，这里方便测试，新建test.txt，输入命令 git add . 添加所有文件 git add test.txt 添加单个文件 git status 查看git状态 git commit -m \"It's my Test WebPage file.\" 上传到仓库(首次上传需要登陆账户密码)：git push -u origin main (执行这个之前必须先在本地做一次提交操作,其中main是分支名) 查看上传日志: git log 更进一步 当然, 有很多时候,我们需要忽略本地特定目录下的文件,例如:Python的依赖库PyhtonLibs,或者node.js的组件node_modules文件夹都不需要上传到github,这时,要设置忽略文件夹: 在git bash中输入touch .gitignore,新建一个文件.gitignore; 可以使用notepad++或VS code编辑该文件,在其中添加./node_modules/ 注意尽量在最后添加/ 分别执行以下命令git rm -r --cached . git add . git commit -m \"update .gitignore\" 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-23 18:59:56 "},"SoftTuto/Manage/Git/UpdateThisSite.html":{"url":"SoftTuto/Manage/Git/UpdateThisSite.html","title":"本Wiki维护教程","keywords":"","body":"本Wiki维护教程 在已有分类的路径下添加markdown文件,需满足以下要求; 请把文件名设置为 英文开头，且只有英文和数字, 后缀名为.md; 文件内容的第一个非空行将作为内容索引, 因此: 第一个非空行中禁止链接和行内代码. 第一个非空行最好是中文名。 如果要新建分类,需要修改GenSideBarNav.py和GenMindImage.py脚本中的main()函数. 运行脚本GitbookBuild.bat,本脚本将自动: 运行根目录的GenMindImage.py脚本, 将为每个子分类建立目录页(README.md) 运行根目录的GenSideBarNav.py脚本, 将更新mds目录下的SUMMARY.md文件，以建立侧边栏目录。 自动编译生成Gitbook的网页文件(./docs). 自动打开浏览器预览本地电子书. 警告: 使用脚本GitbookResetReadMe.bat会将所有分类的目录页置为404页面. 本站通过脚本自动生成目录(导航)页,但前提是有本地已经安装了Python. 如果还没安装,需要把pythonlib.zip 放在与脚本同一目录,并解压到当前文件夹.并修改GitbookBuild.bat的10~13行. MyWiki |--docs : gitbook build生成的网页,xxx.github.io从本文件夹读取生成Pages. |--mds | |--README.md | |--SUMMARY.md | |--node_modules | |--Coding | |--SoftTuto | |--img : 包含网页logo. | |--pythonlib : | |--python.exe | |... | |--GitbookBuild.bat : 一键生成导航页的脚本,会使用脚本 GenMindImage.py 和 GenSideBarNav.py |--GenMindImage.py, GenSideBarNav.py : python脚本,不可删除. |--GitbookResetReadMe.bat : 一键置404,用处不大. 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-26 16:12:47 "},"SoftTuto/Manage/Inlook/":{"url":"SoftTuto/Manage/Inlook/","title":"Inlook","keywords":"","body":"资源列表 回到首页 Inlook - 你的个人工作助手 Inlook用户指南 img 资源(右键打开或下载) addaccount.png addaccount2.png addagenda.png button.png changesize.png install.png installing.png login.png loginsuccess.png loginsuccess2.png mainWindow.png mainWindow2.png screen_shot.png sjadd1.png sjadd2.png switchExchange.png tray.png res 资源(右键打开或下载) 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Manage/Inlook/InlookIsReleased.html":{"url":"SoftTuto/Manage/Inlook/InlookIsReleased.html","title":"Inlook - 你的个人工作助手","keywords":"","body":"Inlook - 你的个人工作助手 Inlook是为在桌面上直观地提醒用户收到未读邮件和日程安排而开发的软件。本发布版仅限Windows 10. 开发者可基于此项目自由开发其他平台的版本。 使用截图 声明: 如无特大bug,本软件将暂时不再发布新版本. 下载 点我下载 提取码 a1b2 用户使用说明 功能特点 新邮件到达时自动弹窗提醒. 列出从昨天到未来6天的日程. 支持解锁、锁定窗口大小和位置. 窗口放在桌面最底层,不影响游戏和工作. 网速和占用RAM监控. 支持鼠标穿透,提高工作效率. 智能缩放,根据邮箱数目和日程项数自动规划窗口大小. 支持中文界面!默认设置为中文. 每日一句古诗词,鼠标放上去可以查看自己的IP. 版本发布 2021.01.27 1.0.0.3 在中文界面增加每日诗词. 2021.01.19 1.0.0.2 增加用户登录账户验证功能, 修复Bug: 第二次网络中断后连接造成崩溃 2021.01.15 1.0.0.1 增加对中文界面的支持. 2020.12.29 1.0.0.0 初始版本发布 利益声明 GNU General Public License v3.0 用户提醒 添加你的邮箱账户可以实现新邮件提醒, 你需要提前获取你的邮箱的IMAP的服务器信息，部分邮箱如163，QQ邮箱登录时需要授权码而不是密码。 在本软件和手机自带的日历中添加同一个Exchange账户(我自己测试的是Outlook),可以实现日程多端自动同步, 日程提醒。 任何时候可以直接在托盘修改语言,无需重启软件. 自1.0.0.1发布版之后,去除了快捷方式的开机启动,如有需要,请自行生成指向start.bat的快捷方式,并拖放到C:\\Users\\[username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup目录. 其他 自己为了自己用写的软件，代码全部开源，你可以下载后直接修改作为自己喜欢的版本； 因使用本软件产生的问题，后果自负； 本软件中用到了PyQt,exchangelib,需自觉遵守开源协议，禁止商用； 自己的Win10上用的很好,可能不自动适配你的电脑屏幕，请自行修改，也希望能帮我改，可以一块合作。 后续可能会添加Launcher面板，可以放几个小工具。 支持请发热心和好评，欢迎一起Debug. 为了一些人的使用方便，添加了桌面快捷方式,如果需要去除，请到系统文件夹内删除快捷方式即可。 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-28 11:57:37 "},"SoftTuto/Manage/Inlook/InlookUsage.html":{"url":"SoftTuto/Manage/Inlook/InlookUsage.html","title":"Inlook用户指南","keywords":"","body":"Inlook用户指南 安装 点我下载 (提取码 a1b2) 双击Inlook V1.0.0.3.exe,选择目标文件夹到你想安装的目录(建议路径不要有中文) 点击安装. 安装过程会将所有源码解压到安装目录,写得不好请见谅,欢迎大佬指导. 完成安装,可以看到桌面已经生成快捷方式(链接到安装目录的start.bat). 添加邮箱账户 安装完成后, 会自动弹出登录窗口,在窗口中登录你的邮箱. 账户别称: 你给这个邮箱账户起的名字,后面会显示在软件中. 服务器: 去邮箱官网的帮助中心,查询邮箱的IMAP服务器. QQ邮箱的IMAP服务器imap.qq.com; 163邮箱的IMAP服务器imap.163.com; 其他服务器请在邮箱首页的帮助中心查看. 你的邮箱需要开启IMAP服务, QQ邮箱开启方法, 163邮箱开启方法. 账户名: 填写你的邮箱地址. 密码: 填写你的邮箱密码. 如果是163邮箱和QQ邮箱,需要填写授权码. 查看163邮箱的授权码获取方法,QQ邮箱的授权码获取方法. 网站: 填写邮箱的网页站点，如mail.163.com,mail.qq.com,mail.cstnet.cn等. 点击登录,弹出超大登录成功消息 可以看到已经在Windows桌面出现啦~~ 如果需要继续添加邮箱账户,请点击添加账户按钮. 添加Exchange账户 这里以添加outlook账户为例. 点击主页面添加账户按钮,选择账户类型为Exchange. 填写账户信息 账户别称: 你给这个账户起的名字,后面会显示在软件中. 服务器: 去邮箱官网的帮助中心,查询邮箱的Exchange服务器. Outlook账户的服务器eas.outlook.com 账户名: 你的 Exchange 账户 密码: 相应的账户密码 网站: 填写Exchange的网页站点，如outlook.live.com等. 点击登录,弹出超大登录成功消息 可以看到已经在Windows桌面出现啦~~ 主页面已经可以看到日程和邮箱未读数. 手机添加Exchange账户 这里以菊厂的自带日历为例.其他手机应该没别的问题,有问题也别找我,不归我负责. 打开华为日历，点击右上角三个点-点日历账户管理-点添加账户； 填写登陆账户信息，地址填写邮箱地址，密码为邮箱登录密码。 Exchange账户登陆成功就可以正常进行账户同步, 可以设置你的同步周期为15分钟。 添加日程 点击主页面添加日程按钮,弹出添加日程对话框. 填写添加日程的信息. 点击确认. 一分钟后,可以看到主页面已经自动同步到了 Inlook 的窗口,窗口大小根据日程数目自适应伸缩. 查看手机,也可以看到了 如果没有看到,是你的手机同步频率设置得低了,反正不是我的锅, 你需要在手机这边 手动同步 一下. 到时候后本软件自动强力提醒, 应该是 半分钟之内无法关闭的窗口 , 同时伴随 魔力铃声 . 你在手机端删除日程,Inlook也会同步删除哦~ 移动和缩放界面 切换语言及鼠标穿透 中文界面的每日一句功能有jinrishici API提供,感谢！ 英文界面的每日一句功能有爱词霸提供,感谢！ 鼠标穿透功能可以让Inlook停止捕获鼠标,安静地躺在桌面最下层,不影响你的正常办公~ 提醒 添加你的邮箱账户可以实现新邮件提醒, 你需要提前获取你的邮箱的IMAP的服务器信息，部分邮箱如163，QQ邮箱登录时需要授权码而不是密码。 在本软件和手机自带的日历中添加同一个Exchange账户(我自己测试的是Outlook),可以实现日程多端自动同步, 日程提醒。 任何时候可以直接在托盘修改语言,无需重启软件. 自1.0.0.1发布版之后,去除了快捷方式的开机启动,如有需要,请自行生成指向start.bat的快捷方式,并拖放到C:\\Users\\[username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup目录. 其他说明 自己为了自己用写的软件，代码全部开源，你可以下载后直接修改作为自己喜欢的版本； 因使用本软件产生的问题，后果自负； 本软件中用到了PyQt,exchangelib,需自觉遵守开源协议，禁止商用； 自己的Win10上用的很好,可能不自动适配你的电脑屏幕，请自行修改，也希望能帮我改，可以一块合作。 支持请发热心和好评，欢迎一起Debug. 为了使用方便，添加了桌面快捷方式,如果需要去除，请到系统文件夹内删除快捷方式即可。 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-28 11:56:59 "},"SoftTuto/Manage/Outlook/":{"url":"SoftTuto/Manage/Outlook/","title":"Outlook","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Office/":{"url":"SoftTuto/Office/","title":"办公软件","keywords":"","body":"资源列表 回到首页 Excel PPT Word 中文学位论文参考文献格式配置 Word中公式中自动编号的最终解决办法 跨行对齐公式与公式代码 在Word中使用FontAwesome图标 res 资源(右键打开或下载) csl_modifyGB.png eq1.png eq2.png eq3.png eq4.png eq5.png eq6.png eq7.png eq8.png FontAwesomeFree511.zip FontAwesomePro572.zip 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Office/Excel/":{"url":"SoftTuto/Office/Excel/","title":"Excel","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Office/PPT/":{"url":"SoftTuto/Office/PPT/","title":"PPT","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Office/Word/":{"url":"SoftTuto/Office/Word/","title":"Word","keywords":"","body":"资源列表 回到首页 中文学位论文参考文献格式配置 Word中公式中自动编号的最终解决办法 跨行对齐公式与公式代码 在Word中使用FontAwesome图标 res 资源(右键打开或下载) csl_modifyGB.png eq1.png eq2.png eq3.png eq4.png eq5.png eq6.png eq7.png eq8.png FontAwesomeFree511.zip FontAwesomePro572.zip 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Office/Word/CNPaperRefSetting.html":{"url":"SoftTuto/Office/Word/CNPaperRefSetting.html","title":"中文学位论文参考文献格式配置","keywords":"","body":"中文学位论文参考文献格式配置 mendeley引入并修改GB/T 7714-2005中文标准参考文献 ，解决人名全部大写问题 在mendeley的菜单栏,View->Citation Style->More styles->Get More Stytles 在出现的搜索框中搜索 7714，点击China National Starndard GB/T 7714-2015 (number,Chinese)安装; 在word中使用时发现英文人名都是大写的, 需要修改为首字母大写其余小写的人名样式: mendeley的菜单栏View->Citation Style->More styles->Installed 选中要修改的style->右键->Edit Stytle. 会进入网站页面。 网页左边的层次图中BIBLIOGARPHY> Layout > author (macro) > Names > Name > Name-part，在text-case中将原本的capitalize更换为capitalize-first,查看效果是否符合预期. 修改为首字母大写 修改完成, Style > Save Style As..., 即可自动完成在软件中的安装. 同时也在Mendeley网站存储, 别人可以通过链接https://csl.mendeley.com/styles/617813421/china-national-standard-gb-t-7714-2015-numeric-Chenchuanglu 安装该文件. 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-20 10:13:16 "},"SoftTuto/Office/Word/EquationInWord.html":{"url":"SoftTuto/Office/Word/EquationInWord.html","title":"Word中公式中自动编号的最终解决办法","keywords":"","body":"Word中公式中自动编号的最终解决办法 网上讲述的有两种方式，一种是表格，一种是Tab控制缩进。不喜用表格做束缚，毕竟对于很长的公式，或者很长的编号，边框限制了它的想象，于是想用Tab控制缩进的方式。。。 路漫漫。。 制表位法公式 新建一个word2016文档，打开文档后，点击菜单栏中布局。点击布局选项卡中纸张大小，设置为A4大小。 点击页边距，选择为常规页边距。 在word页面中点击菜单栏插入，点击公式（或者按Alt 和 = 键），弹出列表中选择一个公式，例如二次公式。 插入公式后，在公式后面，点击菜单栏引用>插入题注，标签为公式，勾选从题注中排除标签，点确定自动插入编号。 由于除了公式之外，本行还有一个编号1，因此Word自动识别为行内公式，居左。 右键单击公式所在的行，弹出列表中点击“段落”。打开段落设置窗口，点击左下角的“制表位”。 打开制表位窗口。设置第一个制表位，即公式前面的制表位，在制表位位置处输入：7.32厘米，选择对齐方式为“居中对齐”。点击设置按钮。 继续设置第二个制表位位置，输入位置数值为：17.82厘米，对齐方式选择为“右对齐”，点击确定按钮。 将光标置于公式前面，按下键盘上的Tab键，则公式就会向右移动到第一个制表位的位置。 然后光标置于公式和编号中间，按下键盘上的Tab键，则编号就会移动到第二个制表位的位置。如图所示。 一次偶然地尝试写大型运算符，比如求和运算符的时候， 额，好丑有么有，通过一系列的查询，发现在公式外框的下拉菜单中，选择更改为显示，于是我的公式变成了下面这样 公式是好看了，可编号你妹的，，别跑。。呀。。 经过一系列的折腾，发现此法行不通了，嘤嘤嘤。。。 然鹅，一次偶然发现，原来Word里的公式是自己资瓷编号的，在公式里添加#(1)即可，于是试了试 然后公式框上的下拉菜单选择专用，把公式转变为专业格式，然后就出现了下面这一幕。 咦，挺像那么回事了。。 12. 然鹅！我又然鹅了！能不能在公式中插入题注呢~于是便有了下图。 插入之后，同样按公式框上的下拉菜单选择专用，把公式转变为专业格式，看到编号已经右对齐啦。 然后，怎么知道自动编号有没有用呢，你可以重复上述步骤，然鹅，我是不会这么干的，太慢啦~ 选中已有公式，菜单插入>文档部件>自动图文集> 将所选内容保存到自动图文集，并保存到文档模板normal.dot。 点击菜单中文件>选项>快速访问工具栏>从下列位置选择命令中选择\"插入\"选项卡，双击自动图文集，可以看到右侧已添加自动图文集，点确定将自动图文集添加到快速访问工具栏。 在Word窗口的最左上角，点击自动图文集按钮，选择公式，然后可以插入自动编号的美观大方的Word公式啦。 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-04 17:31:53 "},"SoftTuto/Office/Word/EquationInWord2.html":{"url":"SoftTuto/Office/Word/EquationInWord2.html","title":"跨行对齐公式与公式代码","keywords":"","body":"跨行对齐公式与公式代码 跨行对齐公式 打开或新建一个Word文档，按Alt+=键，插入一个新的公式，公式菜单默认使用Unicode模式； 输入\\eqarray, 出现一个黑色实心方块； 输入(a+b&=c@b+c+1&=d),然后按，可以看到公式已经完整出现. LaTeX公式代码为A=\\{\\matrix{a&b&c\\\\d&e&f\\\\g&h&j}\\}。 强烈建议使用Latex公式编码, Latex公式大全) Latex公式代码 查询Word官网可以得到，Word中的Latex公式主要有以下几点不同: 不支持\\begin{}和\\end{}，因此要将 \\begin{matrix}***\\end{matrix} 修改为 \\matrix{***} \\begin{cases}***\\end{cases} 修改为 \\cases{***} 花括号写起来更简单，不需要写成\\left\\{，直接使用{即可； 绝对值符号写起来更简单，不需要写成\\left\\vert或\\vert，直接使用|； 不支持关键字\\boxed{}，直接使用\\rect{}。 下面列出了Word中常用的公式： 公式效果 Word中Latex代码 Markdown中公式代码 \\overrightarrow{abc} \\vec{abc} \\overrightarrow{abc} \\widehat{abc} \\hat{abc} \\widehat{abc} \\overline{abc} \\overbar{abc} \\overline{abc} \\overbrace{abc} \\overbrace{abc} \\overbrace{abc} \\left\\{a+\\frac{b}{c}\\right\\} \\left{a+\\frac{b}{c}\\right} \\left\\{a+\\frac{b}{c}\\right\\} \\left(a+\\frac{b}{c}\\right) \\left(a+\\frac{b}{c}\\right) \\left(a+\\frac{b}{c}\\right) \\left\\{\\frac{b}{c}\\left\\vert x+y\\right\\vert\\right\\} \\left{\\frac{b}{c}|x+y|\\right} \\left\\{\\frac{b}{c}\\left\\vert x+y\\right\\vert\\right\\} \\frac{b}{a+c} \\frac{b}{a+c} \\frac{b}{a+c} {_a^b}x{_c^d} {_a^b}x{_c^d} {_a^b}x{_c^d} \\lim_{n\\rightarrow\\infty}{n} \\lim\\below{n\\rightarrow\\infty}{n} \\lim_{n\\rightarrow\\infty}{n} \\begin{matrix}a&b&\\cr&c&d\\cr\\end{matrix} \\matrix{a&b&\\cr&c&d\\cr} \\begin{matrix}a&b&\\cr&c&d\\cr\\end{matrix} \\iint_{a=0}^{\\infty}{a} \\iint_{a=0}^{\\infty}{a} \\iint_{a=0}^{\\infty}{a} \\sqrt[5]{a^2} \\sqrt[5]{a^2} \\sqrt[5]{a^2} 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-06 21:09:00 "},"SoftTuto/Office/Word/UseFontAwesomeInWord.html":{"url":"SoftTuto/Office/Word/UseFontAwesomeInWord.html","title":"在Word中使用FontAwesome图标","keywords":"","body":"在Word中使用FontAwesome图标 下载 Font Awesome Free 511或Font Awesome Pro 572 到本地，并安装改字体，字体名称为 FontAwesome. 在Word中插入符号,选择Font Awesome. 该字体在Visio中应该也是可用的。 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-04 11:45:17 "},"SoftTuto/Plugins/":{"url":"SoftTuto/Plugins/","title":"插件类","keywords":"","body":"资源列表 回到首页 ChromeExt Floccus配合坚果云同步书签教程 res 资源(右键打开或下载) bookmarks.xbel GIMPPlu GitbookPlu OfficePlu VSCodeExt 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Plugins/ChromeExt/":{"url":"SoftTuto/Plugins/ChromeExt/","title":"Chrome插件","keywords":"","body":"资源列表 回到首页 Floccus配合坚果云同步书签教程 res 资源(右键打开或下载) bookmarks.xbel 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Plugins/ChromeExt/FloccusSyncYourBookmarks.html":{"url":"SoftTuto/Plugins/ChromeExt/FloccusSyncYourBookmarks.html","title":"Floccus配合坚果云同步书签教程","keywords":"","body":"Floccus配合坚果云同步书签教程 Floccus支持WebDAV、Nextcloud Bookmarks和本地文件网盘同步。这里配合坚果云,采用的是WebDAV方案. 在坚果云上的准备 在同步文件夹根目录(也就是我的坚果云同一目录)下创建一个文件夹，选择默认不同步到本地，你要同步也可以，名字随意，这里是 floccus. 然后上传一个bookmarks.xbel文件到刚新建的文件夹里面. 接着坚果云账户信息-安全选项-第三方应用管理，创建一个WebDAV应用，获取密码。 Floccus插件安装和设置 安装好了Floccus插件后，点击图标，然后选择XBEL in WebDAV，然后Add Account。 WebDAV的服务器信息就跟着坚果云给你的信息填写上去就可以了,一般应该是: ## WebDAV URL: https://dav.jianguoyun.com/dav/ ## User name: *****@***.com ## Password: ***** ## Bookmarks file path,填写你刚才创建的 文件夹/bookmarks.xbel 书签的目录直接选择根目录就可以了，如果新建的话他是在你现在浏览器书签基础上新建一个同步的书签文件夹。 例如,在PC端Edge里选择根目录为/收藏夹栏/,在Android端的kiwi browser里选择/移动设备书签/就可以啦. 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-16 14:23:03 "},"SoftTuto/Plugins/GIMPPlu/":{"url":"SoftTuto/Plugins/GIMPPlu/","title":"GIMP插件","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Plugins/GitbookPlu/":{"url":"SoftTuto/Plugins/GitbookPlu/","title":"Gitbook插件","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Plugins/OfficePlu/":{"url":"SoftTuto/Plugins/OfficePlu/","title":"Office插件","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Plugins/VSCodeExt/":{"url":"SoftTuto/Plugins/VSCodeExt/","title":"VSCode插件","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Project/":{"url":"SoftTuto/Project/","title":"工程/项目软件","keywords":"","body":"资源列表 回到首页 AltiumDesigner CadenceSPB KeilMDK ModelSim MultiSim Others 根据文字生成字符画 Qt SolidWorks VisualStudio Vivado VSCode 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Project/AltiumDesigner/":{"url":"SoftTuto/Project/AltiumDesigner/","title":"Altium Designer","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Project/CadenceSPB/":{"url":"SoftTuto/Project/CadenceSPB/","title":"Cadence SPB","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Project/KeilMDK/":{"url":"SoftTuto/Project/KeilMDK/","title":"Keil MDK","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Project/ModelSim/":{"url":"SoftTuto/Project/ModelSim/","title":"ModelSim","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Project/MultiSim/":{"url":"SoftTuto/Project/MultiSim/","title":"MultiSim","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Project/Others/":{"url":"SoftTuto/Project/Others/","title":"其他","keywords":"","body":"资源列表 回到首页 根据文字生成字符画 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Project/Others/InsertASCIIChartInCode.html":{"url":"SoftTuto/Project/Others/InsertASCIIChartInCode.html","title":"根据文字生成字符画","keywords":"","body":"根据文字生成字符画 http://patorjk.com/software/taag http://www.network-science.de/ascii/ 根据图片生成字符画 http://www.degraeve.com/img2txt.php http://life.chacuo.net/convertphoto2char 根据流程图生成字符画 http://asciiflow.com/ 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-01-26 09:11:36 "},"SoftTuto/Project/Qt/":{"url":"SoftTuto/Project/Qt/","title":"Qt","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Project/SolidWorks/":{"url":"SoftTuto/Project/SolidWorks/","title":"SolidWorks","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Project/VisualStudio/":{"url":"SoftTuto/Project/VisualStudio/","title":"Visual Studio","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Project/Vivado/":{"url":"SoftTuto/Project/Vivado/","title":"Vivado","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Project/VSCode/":{"url":"SoftTuto/Project/VSCode/","title":"VS Code","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Video/":{"url":"SoftTuto/Video/","title":"视频软件","keywords":"","body":"资源列表 回到首页 VideoStudio 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"SoftTuto/Video/VideoStudio/":{"url":"SoftTuto/Video/VideoStudio/","title":"会声会影","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"KnowWorld/Physics/":{"url":"KnowWorld/Physics/","title":"物理学类","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"KnowWorld/SigASys/":{"url":"KnowWorld/SigASys/","title":"信号与系统","keywords":"","body":"资源列表 回到首页 ImgProc SigProc 傅里叶级数与傅里叶变换(Fourier Transform) 小波变换(一): 为什么需要小波? 小波变换(二): 小波基函数,母小波和父小波 小波变换(三): 从实例代码看Haar小波分解和重构 小波变换(四): 常用小波特点及二维小波变换 小波变换(五): 小波变换与卷积 小波变换彩蛋: Python中的小波变换库 .vscode 资源(右键打开或下载) settings.json res 资源(右键打开或下载) fourier.jpg fourier2.jpg sigGen.py sigSpectrum.py wavelet1.jpg wavelet10.png wavelet11.png wavelet12.png wavelet13.png wavelet14.png wavelet15.png wavelet2.jpg wavelet3.png wavelet4.jpg wavelet5-1.jpg wavelet5-2.jpg wavelet5-3.jpg wavelet6.png wavelet7.png wavelet8.png wavelet9.png WaveletTrans.py WaveletTransTest.py init.py pycache 资源(右键打开或下载) fourier.cpython-36.pyc sigGen.cpython-36.pyc WaveletTrans.cpython-36.pyc init.cpython-36.pyc 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"KnowWorld/SigASys/ImgProc/":{"url":"KnowWorld/SigASys/ImgProc/","title":"图像处理","keywords":"","body":"资源列表 回到首页 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"KnowWorld/SigASys/SigProc/":{"url":"KnowWorld/SigASys/SigProc/","title":"信号处理","keywords":"","body":"资源列表 回到首页 傅里叶级数与傅里叶变换(Fourier Transform) 小波变换(一): 为什么需要小波? 小波变换(二): 小波基函数,母小波和父小波 小波变换(三): 从实例代码看Haar小波分解和重构 小波变换(四): 常用小波特点及二维小波变换 小波变换(五): 小波变换与卷积 小波变换彩蛋: Python中的小波变换库 .vscode 资源(右键打开或下载) settings.json res 资源(右键打开或下载) fourier.jpg fourier2.jpg sigGen.py sigSpectrum.py wavelet1.jpg wavelet10.png wavelet11.png wavelet12.png wavelet13.png wavelet14.png wavelet15.png wavelet2.jpg wavelet3.png wavelet4.jpg wavelet5-1.jpg wavelet5-2.jpg wavelet5-3.jpg wavelet6.png wavelet7.png wavelet8.png wavelet9.png WaveletTrans.py WaveletTransTest.py init.py pycache 资源(右键打开或下载) fourier.cpython-36.pyc sigGen.cpython-36.pyc WaveletTrans.cpython-36.pyc init.cpython-36.pyc 内容概要 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-12 08:50:18 "},"KnowWorld/SigASys/SigProc/FourierTransform.html":{"url":"KnowWorld/SigASys/SigProc/FourierTransform.html","title":"傅里叶级数与傅里叶变换(Fourier Transform)","keywords":"","body":"傅里叶级数与傅里叶变换(Fourier Transform) 频谱分析是一种对于周期性波动信号做数值分析的方法，将随时间做周期性变化的振动信号分解为不同频率的振动分量，形成频谱。 概要 连续的周期信号用E=\\{e^{ikωt}\\},k\\in N作为基函数，进行傅里叶级数分析； 连续的非周期信号(自然信号)用傅里叶变换，进行频域分析； 离散的非周期信号(采样的自然信号)用离散傅里叶变换，进行频域分析。 正余弦级数展开 设周期信号 f(t) 的周期为 T ，相应的 \\omega = \\frac{1}{2\\pi} 。现在以 E=\\{1,cos⁡kωt,sin⁡kωt\\},k\\in N^{+} 作为一组正交基函数，进行傅里叶级数展开： \r \\begin{aligned}\r f(t)&=\\sum_{g_{k}(t)\\in E}c_{k}g_{k}(t) \\\\\r &=a_{0}+\\sum^{\\infty}_{k=1}\\{a_{k}\\cos k\\omega t + b_{k}\\sin k\\omega t\\} \\\\\r &=\\sum^{\\infty}_{k=0}\\{a_{k}\\cos k\\omega t + b_{k} \\sin k\\omega t\\}\r \\end{aligned}\\tag{1}\r 其中，系数a_k和b_k是函数f(t)在基函数g_{k}(t)上分量的振幅大小。由于正交函数之间的内积\\langle g_i (t),g_j (t)\\rangle=0，其中i≠j。于是 \r \\langle f(t),g_n (t)\\rangle =\\sum_{g_k (t)\\in E}c_k \\langle g_k (t),g_n (t)\\rangle =c_n \\langle g_n (t),g_n (t)\\rangle \\tag{2}\r 因此分量振幅的大小c_n可以通过函数的内积计算， \r c_n=\\frac{\\langle f(t),g_n (t)\\rangle}{\\langle g_n (t),g_n (t)\\rangle} =\\frac{\\int_{-∞}^{+∞}f(t)\\bullet g_n (t)dt}{\\int_{-∞}^{+∞}g_n (t)∙g_n (t)dt}\\tag{3}\r 对于周期为T的信号f(t)，可计算得到 \r \\begin{aligned}\r a_0&=\\frac{1}{T} \\int_{t_0}^{t_0+T}f(t)dt\\\\\r a_n&=\\frac{2}{T} \\int_{t_0}^{t_0+T}f(t) \\cos ⁡n\\omega t dt \\\\\r b_n&=\\frac{2}{T} \\int_{t_0}^{t_0+T}f(t) \\sin⁡ n\\omega t dt\r \\end{aligned}\\tag{4}\r 根据公式(1)和公式(4)，可以把任意周期函数f(t)展开为正弦和余弦函数的级数。 傅里叶级数 与正余弦级数展开完全类似，只不过把E=\\{e^{ikωt}\\},k\\in N作为一组新的正交基函数，于是对周期信号f(t)进行傅里叶级数展开： \r f(t)=\\sum_{k=-\\infty}^{\\infty}A_{k}\\bullet e^{ikωt}\\tag{5}\r 由于\\int_{-\\infty}^{\\infty}e^{in \\omega t}dt=\\int_{-\\infty}^{\\infty}(\\cos ⁡n\\omega t+i \\sin⁡ n\\omega t)dt=0，于是 \r \\langle f(t),e^{-in\\omega t} \\rangle =\\sum_{k=-\\infty}^{\\infty}A_k \\int_{-\\infty}^{\\infty}e^{ik\\omega t}\\bullet e^{-in\\omega t} dt=A_n \\int_{-\\infty}^{\\infty}1dt\\tag{6}\r 对于周期为T的信号f(t)，可以计算分量的振幅为 \r A_k=\\frac{1}{T} \\int_{-\\frac{T}{2}}^{\\frac{T}{2}}f(t) e^{-ik\\omega t} dt\\tag{7}\r 傅里叶变换 但当信号f(t)为非周期信号，即T\\rightarrow \\infty，则信号的频率\\omega\\rightarrow 0， 记W=k\\omega，则与相邻基函数的频率相差为\\Delta W=(k+1)\\omega - k\\omega=\\omega \\rightarrow 0。 公式(7)可以写成 \r A_k=\\frac{1}{T} \\int_{-\\frac{T}{2}}^{\\frac{T}{2}}f(t) e^{-iW t} dt\\tag{8}\r 则对于任意非周期信号， \r \\begin{aligned}\r f(t)&=\\lim_{T\\rightarrow \\infty}\\sum^{\\infty}_{k=-\\infty}(\\frac{1}{T}\\int_{-\\frac{T}{2}}^{\\frac{T}{2}}f(t) e^{-ik\\omega t} dt)e^{ik\\omega t} \\\\\r &=\\lim_{T\\rightarrow \\infty}\\sum^{\\infty}_{W=-\\infty}(\\frac{1}{T}\\int_{-\\frac{T}{2}}^{\\frac{T}{2}}f(t) e^{-iW t} dt)e^{iW t} \\\\\r &=\\lim_{\\Delta W\\rightarrow 0}\\sum^{\\infty}_{W=-\\infty}(\\frac{1}{2\\pi}\\int_{-\\infty}^{\\infty}f(t) e^{-iW t} dt)e^{iW t}\\Delta W\\\\\r &=\\frac{1}{2\\pi}\\int^{\\infty}_{-\\infty}(\\int_{-\\infty}^{\\infty}f(t) e^{-iW t} dt)e^{iW t}dW\r \\end{aligned}\\tag{9}\r 令 \r F(W)=\\int_{-\\infty}^{\\infty}f(t) e^{-iW t} dt\\tag{10}\r 则 \r f(t)=\\frac{1}{2\\pi}\\int^{\\infty}_{-\\infty}F(W)e^{iW t}dW\\tag{11}\r 公式(10)与公式(11)就是大名鼎鼎的傅里叶变换与傅里叶反变换。 常用的离散傅里叶变换(DFT,Descrete Fourier Transform) 自然界中的信号大部分都是连续非周期信号。因此傅里叶变换的应用远远多于傅里叶级数。 通常，我们会收集一段信号，该信号是由ADC采样得到，因此是时间离散的信号，该离散的非周期信号是从连续的非周期信号中采样产生的，采样的时间区间为T=[t_{1},t_{2}]，采样的时间间隔为\\Delta t=\\frac{T}{N}，于是采样得到的信号 f_{s}(t)=f(t)\\delta(t_{1}+n\\Delta t) 则该采样信号的傅里叶变换： \r \\begin{aligned}\r F_{s}(\\omega)&=\\int_{t_{1}}^{t_{2}}f(t) e^{-i\\omega t} \\delta(t_{1}+n\\Delta t)dt \\\\\r &=\\frac{T}{N}\\sum_{n=0}^{N-1}f(t_{1}+n\\Delta t) e^{-i\\omega (t_{1}+n\\Delta t)}\r \\end{aligned}\\tag{11}\r 如果F_{s}(\\omega)的频率取值区间为[\\omega_{1},\\omega_{2}]，则有 \r F_{s}(\\omega_{1}+k\\Delta\\omega)=\\frac{T}{N}\\sum_{n=0}^{N-1}f(t_{1}+n\\Delta t) e^{-i(\\omega_{1}+k\\Delta\\omega) (t_{1}+n\\Delta t)} \\tag{12}\r 其中, \\Delta\\omega = \\frac{\\Omega}{K}表示频域抽样间隔，\\Omega=\\omega_{2}-\\omega_{1}表示带宽。 同样的，对于傅里叶逆变换，由于f(t)的频带主要位于[\\omega_{1},\\omega_{2}]，因此 \r f(t)=\\frac{1}{2\\pi}\\int^{\\infty}_{-\\infty}F(\\omega)e^{i\\omega t}d\\omega=\\frac{\\Omega}{2\\pi K}\\sum^{K-1}_{k=0}{F(\\omega_{1}+k\\Delta\\omega)e^{i(\\omega_{1}+k\\Delta\\omega)t}}\\tag{13}\r 在时域的抽样点处，有 \r f(t_{1}+n\\Delta t)=\\frac{\\Omega}{2\\pi K}\\sum^{K-1}_{k=0}{F(\\omega_{1}+k\\Delta\\omega)e^{i(\\omega_{1}+k\\Delta\\omega)(t_{1}+n\\Delta t)}}\\tag{14}\r 公式(12)和(14)体现了离散非周期信号的变换与逆变换，被广泛用于信号分析。 傅里叶变换实例 现在以 f(t)=\\begin{cases}1 &\\lvert{t}\\rvert\\leq{1}\\\\0 &\\text{Others}\\end{cases}为例，画出其频谱及恢复后的波形。 根据式(10) \r F(w)=\\int_{-1}^{1}e^{-i\\omega t}dt=\\frac{1}{w}[\\sin wt+i\\cos wt]\\vert_{-1}^{1}=\\frac{2}{w}\\sin w \\tag{3}\r 也就是说，其频谱为F(w)=\\frac{2}{w}\\sin w，幅度为\\left\\vert F(w)\\right\\vert =\\left\\vert\\frac{2}{w}\\sin w\\right\\vert。 意思就是如下图，原图源自韩昊： Python代码如下： # -*- using: utf-8 -*- import numpy as np import matplotlib.pyplot as plt def fourierTrans(f_t, t, omg): \"\"\" return signal in the frequency domain Paras: f_t: input signal t: a list of sample points in time domain omg: a list of sample points in frequency domain, omg = 2 * pi * f \"\"\" T = t[-1] - t[0] N = len(t) # OMG = omg[-1] - omg[0] K = len(omg) F_omg = np.zeros_like(omg, dtype=complex) # 初始化频谱 for k in range(K): for n in range(N): F_omg[k] = F_omg[k] + T / N * f_t[n] * np.exp( complex(0, -1) * omg[k] * t[n]) return F_omg def ifourierTrans(F_omg, t, omg): \"\"\" return signal in the time domain Paras: F_omg: input, the amplitude in frequency domain t: a list of sample points in time domain omg: a list of sample points in frequency domain \"\"\" # T = t[-1] - t[0] N = len(t) OMG = omg[-1] - omg[0] K = len(omg) fs = np.zeros_like(t, dtype=complex) for n in range(N): for k in range(K): fs[n] = fs[n] + OMG / 2 / np.pi / K * F_omg[k] * np.exp( complex(0, 1) * omg[k] * t[n]) return fs def main(): T = 4 # 时域区间长度 N = 201 # 时域抽样点数 t = np.linspace(-T / 2, T / 2, N) # 时域抽样点 OMG = 16 * np.pi # 频域区间长度 K = 101 # 频域抽样点数 omg = np.linspace(-OMG / 2, OMG / 2, K) # 频域抽样点 f_t = np.zeros_like(t) # 初始化f mlist = [i for i in range(len(t)) if (t[i] -1)] f_t[mlist] = 1 # 设置好f F_omg = fourierTrans(f_t, t, omg) fs = ifourierTrans(F_omg, t, omg) plt.figure(figsize=(12, 4)) ax1 = plt.subplot(1, 2, 1) plt.plot(t, f_t, color='blue', linestyle='-', label='f') plt.plot(t, fs.real, color='red', linestyle=':', label=\"f'\") ax1.set_xlabel('$t$') ax1.set_ylabel('$f(t)$') ax1.legend(loc='upper right') ax2 = plt.subplot(1, 2, 2) plt.plot(omg, F_omg.real, 'k-') ax2.set_xlabel('$\\omega$') ax2.set_ylabel('$F(\\omega)$') plt.show() if __name__ == \"__main__\": main() 做出的图为 快速傅里叶变换 傅里叶变换中，包含了大量的乘方运算，导致计算时间较长。在实际应用中，很难实时地处理问题。于是要加速傅里叶变换，涌现了一批能够执行快速傅里叶变换的算法，统称为快速傅里叶变换(Fast Fourier Transform,FFT)。 \r F_{s}(\\omega_{1}+k\\Delta\\omega)=\\frac{T}{N}\\sum_{n=0}^{N-1}f(t_{1}+n\\Delta t) e^{-i(\\omega_{1}+k\\Delta\\omega) (t_{1}+n\\Delta t)} \\tag{12}\r 直接按这个定义求值需要 O(KN) 次运算：F 共有 K 个输出，每个输出需要 N 项求和。直接使用DFT运算需使用N个复数乘法(4N 个实数乘法)与N-1个复数加法(2N-2个实数加法)，因此，如果认为N与K相当，则计算使用DFT所有K点的值需要K N =N N复数乘法与N * N - N 个复数加法。FFT则是能够用更少次操作计算出相同结果的任何方法。更准确的说，所有已知的FFT算法都需要 O(N log N) 次运算（技术上O只标记上界），虽然还没有已知的证据证明更低的复杂度是不可能的。 要说明FFT节省时间的方式，就得考虑复数相乘和相加的次数。直接计算DFT的值涉及到 N2 次复数相乘和 N(N−1) 次复数相加（可以通过削去琐碎运算（如乘以1）来节省 O(N) 次运算）。众所周知的基2库利-图基算法，N 为2的幂，可以只用 (N/2)log2(N) 次复数乘法（再次忽略乘以1的简化）和 Nlog2(N) 次加法就可以得到相同结果。在实际中，现代计算机通常的实际性能通常不受算术运算的速度和对复杂主体的分析主导，但是从 O(N2) 到 O(N log N) 的总体改进仍然能够体现出来。 FFT算法很多，根据实现运算过程是否有指数因子K,N可分为有、无指数因子的两类算法。 有指数因子的算法 经典库利-图基算法 当输入序列的长度N不是素数(素数只能被1而它本身整除）而是可以高度分解的复合数，即N=N1N2N3…Nr时，若N1=N2=…=Nr=2，N=2则N点DFT的计算可分解为N=2×N/2，即两个N/2点DFT计算的组合，而N/2点DFT的计算又可分解为N/2=2×N/4，即两个N/4点DFT计算的组合。依此类推，使DFT的计算形成有规则的模式，故称之为以2为基底的FFT算法。同理，当N=4时，则称之为以4为基底的FFT算法。当N=N1·N2时，称为以N1和N2为基底的混合基算法。 在这些算法中，基2算法用得最普遍。通常按序列在时域或在频域分解过程的不同，又可分为两种：一种是时间抽取FFT算法（DIT），将N点DFT输入序列x(n)、在时域分解成2个N/2点序列而x1(n)和x2(n)。前者是从原序列中按偶数序号抽取而成，而后者则按奇数序号抽取而成。DIT就是这样有规律地按奇、偶次序逐次进行分解所构成的一种快速算法。 分裂基算法(RSFFT) 1984年由P．杜哈美尔和H．赫尔曼等导出的一种比库利图基算法更加有效的改进算法，其基本思想是在变换式的偶部采用基2算法，在变换式的奇部采用基4算法。优点是具有相对简单的结构，非常适用于实对称数据，对长度N=2能获得最少的运算量(乘法和加法），所以是选用固定基算法中的一种最佳折衷算法。 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-10 09:24:57 "},"KnowWorld/SigASys/SigProc/wavelet1.html":{"url":"KnowWorld/SigASys/SigProc/wavelet1.html","title":"小波变换(一): 为什么需要小波?","keywords":"","body":"小波变换(一): 为什么需要小波? 系列文章列表 本文是《小波变换》系列的第1篇，主要介绍为什么需要小波. 小波变换(一): 为什么需要小波? 小波变换(二): 小波基函数,母小波和父小波 小波变换(三): 从实例代码看Haar小波分解和重构 小波变换(四): 常用小波特点及二维小波变换 小波变换(五): 小波，傅里叶与卷积的关系 从傅里叶变换的不足之处开始说起 理解本文需要先理解傅里叶变换，默认正处在理解了傅里叶但还没理解小波的道路上。 我们知道傅里叶变化可以分析信号的频谱，那么为什么还要提出小波变换？答案就是方沁园所说的，“对非平稳过程，傅里叶变换有局限性”。 看如下的该信号: 做完FFT（快速傅里叶变换）后，可以在频谱上看到清晰的四条线，信号包含四个频率成分。 一切没有问题。但是，如果是频率随着时间变化的非平稳信号呢？ 代码点我可查看 最上边的是频率始终不变的平稳信号。而下边两个则是频率随着时间改变的非平稳信号，它们同样包含和最上信号相同频率的四个成分。做FFT后，我们发现这三个时域上有巨大差异的信号，频谱（幅值谱）却非常一致。 我们从频谱上无法区分下边两个非平稳信号，因为它们包含的四个频率的信号的成分确实是一样的，只是出现的先后顺序不同。 对于这样的非平稳信号，只知道包含哪些频率成分是不够的，我们还想知道各个成分出现的时间。知道信号频率随时间变化的情况，各个时刻的瞬时频率及其幅值——这也就是时频分析。 短时傅里叶变换(Short-Time Fourier Transform, STFT) 一个简单可行的方法就是——加窗。我又要套用方沁园同学的描述了，“把整个时域过程分解成无数个等长的小过程，每个小过程近似平稳，再傅里叶变换，就知道在哪个时间点上出现了什么频率了。”这就是短时傅里叶变换。 看图： 时域上分成一段一段做FFT，不就知道频率成分随着时间的变化情况了吗！用这样的方法，可以得到一个信号的时频图了： 图上既能看到10Hz, 25 Hz, 50 Hz, 100 Hz四个频域成分，还能看到出现的时间。两排峰是对称的，所以大家只用看一排就行了。 是不是棒棒的？时频分析结果到手。但是STFT依然有缺陷。 使用STFT存在一个问题，我们应该用多宽的窗函数？ 窗口太窄：窗内的信号太短，会导致频率分析不够精准，频率分辨率差。 窗口太宽：时域上又不够精细，时间分辨率低。 这里使用窗口为一个高斯函数的形式w(t)=e^{-a*t^2/2},a为窗口的长度，t为时间。 窄窗口 中窗口 宽窗口 用窄窗，时频图在时间轴上分辨率很高，几个峰基本成矩形，而用宽窗则变成了绵延的矮山。但是频率轴上，窄窗明显不如下边两个宽窗精确。 对于时变的非稳态信号，高频适合小窗口，低频适合大窗口。然而STFT的窗口是固定的，在一次STFT中宽度不会变化，所以STFT还是无法满足非稳态信号变化的频率的需求。 小波级数展开与小波变换 STFT是给信号加窗，分段做FFT；而小波直接把傅里叶变换的基给换了——将无限长的三角函数基换成了有限长的会衰减的小波基。这样不仅能够获取频率，还可以定位到时间了。 小波是指能量有限，在时域中是有限长的，会衰减的，较为集中的波函数。小波级数展开就是使用一组小波函数作为基函数进行的级数展开。 再复习一下傅里叶级数和傅里叶变换。 对于连续性周期信号，使用基函数 E=\\{e^{ikωt}\\},k\\in N进行傅里叶级数展开。 \r f(t)=\\sum_{k=-\\infty}^{\\infty}A_{k}\\bullet e^{ikωt},\\quad A_k=\\frac{1}{T} \\int_{-\\frac{T}{2}}^{\\frac{T}{2}}f(t) e^{-ik\\omega t} dt\\tag{1}\r 对于连续性非周期信号(自然信号)，使用傅里叶变换进行频域分析。 \r F(\\omega)=\\int_{-\\infty}^{\\infty}f(t) e^{-i \\omega t} dt,\\quad f(t)=\\frac{1}{2\\pi}\\int^{\\infty}_{-\\infty}F(\\omega)e^{i \\omega t}d\\omega\\tag{2}\r 对于离散性非周期信号(采样的自然信号)，使用离散傅里叶变换进行频域分析。 \r \\begin{aligned}\r F_{s}(\\omega_{1}+k\\Delta\\omega)=\\frac{T}{N}\\sum_{n=0}^{N-1}f(t_{1}+n\\Delta t) e^{-i(\\omega_{1}+k\\Delta\\omega) (t_{1}+n\\Delta t)}\\\\\r f(t_{1}+n\\Delta t)=\\frac{\\Omega}{2\\pi K}\\sum^{K-1}_{k=0}{F(\\omega_{1}+k\\Delta\\omega)e^{i(\\omega_{1}+k\\Delta\\omega)(t_{1}+n\\Delta t)}}\\tag{3}\r \\end{aligned}\r 对于连续的信号，以\\varphi(\\frac{t-\\tau}{a})为基函数的小波变换公式为： \r WT(a,\\tau)=\\frac{1}{\\sqrt{a}}\\int^{\\infty}_{-\\infty}{f(t)*\\varphi(\\frac{t-\\color{red}{\\tau}}{\\color{red}{a}})dt}\\tag{4}\r 对于离散的信号，以\\varphi(2^{j}t-k)为基函数，进行小波级数展开： \r f(t) = \\sum_{j\\in N}\\left\\lbrace\\sum_{k\\in Z} c_{k}\\varphi(2^{j}t-k)\\right\\rbrace,\\text{here}\\;c_{k}\\in R\\tag{5}\r 注意二者的小波基函数\\varphi(2^{j}t-k)或者\\varphi(\\frac{t-\\tau}{a})，本质是一样的。 a=2^{-j}，以及j都起到缩放函数的作用，因此都是尺度因子，对应于傅里叶变换中的\\omega的倒数(周期T)。 \\tau=2^{-j}k，以及k是平移因子。 事实上，给了我们公式(5)，并不能用于信号处理的实践应用，你需要看小波变换(二): 小波基函数,母小波和父小波。 接下来你可能想看： 小波变换(二): 小波基函数,母小波和父小波 参考内容 形象易懂讲解算法I-小波变换 《The Wavelet Tutorial》小波教程 中文翻译（上） python实现小波变换的一个简单例子 小波变换和motion信号处理（一） 小波变换和motion信号处理：第二篇 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-10 20:44:13 "},"KnowWorld/SigASys/SigProc/wavelet2.html":{"url":"KnowWorld/SigASys/SigProc/wavelet2.html","title":"小波变换(二): 小波基函数,母小波和父小波","keywords":"","body":"小波变换(二): 小波基函数,母小波和父小波 系列文章列表 本文是《小波变换》系列的第2篇，主要介绍为什么需要小波. 小波变换(一): 为什么需要小波? 小波变换(二): 小波基函数,母小波和父小波 小波变换(三): 从实例代码看Haar小波分解和重构 小波变换(四): 常用小波特点及二维小波变换 小波变换(五): 小波，傅里叶与卷积的关系 小波级数展开与小波变换 上节我们给出了为啥需要小波变换，并给出了小波基函数，小波变换和小波级数的一般形式： 对于连续的信号，以\\varphi(\\frac{t-\\tau}{a})为基函数的小波变换公式为： \r WT(a,\\tau)=\\frac{1}{\\sqrt{a}}\\int^{\\infty}_{-\\infty}{f(t)\\varphi(\\frac{t-\\color{red}{\\tau}}{\\color{red}{a}})dt}\\tag{1}\r 对于离散的信号，以\\varphi(2^{j}t-k)为基函数，进行小波级数展开： \r f(t) = \\sum_{k\\in Z} c_{k}\\varphi(2^{j}t-k),\\text{here}\\;c_{k}\\in R\\tag{2}\r 注意二者的小波基函数\\varphi(2^{j}t-k)或者\\varphi(\\frac{t-\\tau}{a})，本质是一样的。 a=2^{-j}，以及j都起到缩放函数的作用，因此都是尺度因子，对应于傅里叶变换中的\\omega的倒数(周期T)。 \\tau=2^{-j}k，以及k是平移因子。 已经了解了小波基函数的一般形式，那么其他各种网站，资料，论坛里说的母小波和父小波都是什么东西? 母小波的理解 下面以Haar小波为例，详细理解一下小波级数展开的过程，并介绍一下什么是母小波，什么是父小波。 以下是被好多好多人选择的小波：Haar小波。Haar函数(先记一下，其实Haar小波级数展开的母小波)为： \r \\varphi(t)=\r \\begin{cases}\r 1 &0 \\leq t Haar的时域和频域信号 Haar函数在时域上不连续，性能一般，但胜在计算简单。 如果对其向右平移任意k个单位(k\\in Z)，构成一组函数E=\\{\\varphi(t-k)\\}, 该组函数两两相互正交，易证明 \r \\begin{aligned}\r \\langle\\varphi(t-k),\\varphi(t-k)\\rangle &=\\int^{\\infty}_{-\\infty}\\varphi^{2}(t-k)dt=1\\\\\r \\langle\\varphi(t-k),\\varphi(t-k')\\rangle &\\xlongequal[k,k'\\in Z]{k\\ne k'}\\int^{\\infty}_{-\\infty}\\varphi(t-k\\varphi(t-k')dt=0\r \\end{aligned}\r 因此构成一组正交基，这组正交基的线性组合形成函数空间V_0。 此时如果将\\{\\varphi(t-k)\\}的宽度缩小一半，同时保持缩放前后函数的总能量不变，则形成一组基函数E=\\{\\sqrt{2}\\varphi(2t-k)\\}，同样易证明这是另一组正交基,这组正交基的线性组合形成函数空间V_1。 不断缩小尺度，可形成一组基函数E=\\{\\sqrt{2^{j}}\\varphi(2^{j}t-k)\\},s.t.\\,j\\in Z,这组正交基的线性组合形成函数空间V_j。 在Haar小波变换中，所使用的基函数是V_j空间中的基函数(去除了2^j的系数)： \r \\varphi(2^{j}t-k)\\tag{4}\r V_j空间中的任意函数可以写作(c_j中已经包含了2^{j}，此式等同于式(2))： \r f_{j}(t) = \\sum_{k} c_{k}\\varphi(2^{j}t-k), \\text{here}\\;c_{k}\\in R\\tag{5}\r 现在，我们可以用这个阶梯状的函数去近似任意的原始的时域信号啦，不信你看！ 注意，我们现在从式(3)的\\varphi(t)，经过一步步的缩放，平移形成了很多组基函数，这些基函数可以表达函数空间V_{j}的任意函数。再形象一些，空间V_{j}的任意函数都可以用变形过的\\varphi(t)组合得到，因此，\\varphi(t)就被定义为母小波。 把母小波进行缩放，平移，可以构造出小波基函数。 好了，到这儿应该都没什么问题，那既然母小波已经完全可以表示V_{j}空间中的任意函数f_{j}，为啥还要搞出来一个父小波来pullze me? 接着往下看！ 父小波的理解 在实际的信号处理实践中，使用公式(2)是比较难以操作的。例如，以下图的信号为例，高频的毛刺是我们不需要的，要滤除的。 原始信号中的噪声 haar小波基函数的j越大，信号宽度越小，越接近噪声成分。因此，为了滤除噪声，需要很高的时间分辨率。但在低频部分，需要不太高的时间分辨率，j要小一些。 因此我们需要一种属于V_j但不属于V_{j-1}的尖峰函数，以匹配原始时域信号中的毛刺。 通过观察得到，函数空间V_0的任意基函数\\varphi(t-k)可以被空间V_1中的基函数线性组合得到(如下图(a))，因此V_0是V_1的子空间。以此类推，容易得到 \r \\varphi(2^{j}t)+\\varphi(2^{j}t-1)=\\varphi(2^{j-1}t)\\tag{6}\r 于是V_{j-1}也是V_{j}的子空间。那么就有V_0\\subseteq V_1\\subseteq\\cdots\\subseteq V_j。 如果定义如上图(b)所示的\\psi(t)，则\\psi(t)是V_{1}空间中的一个函数： \\psi(t)=\\varphi(2t)-\\varphi(2t-1)\\tag{7} 容易发现，对于V_{0}空间的任意的基函数\\varphi(t-k)，都有\\langle \\varphi(t-k),\\psi(t)\\rangle=0。事实上，对\\psi(t)平移k个单位后得到的函数\\psi(t-k)=\\varphi[2(t-k)]-\\varphi[2(t-k)-1]，都与V_{0}空间正交。函数\\psi(t-k)的线性组合也都与V_{0}空间正交。 进一步地，V_{j}空间中的函数 \\psi[2^{j-1}(t-k)] = \\varphi[2^{j}(t-k)]-\\varphi[2^{j}(t-k)-1]\\tag{8} 与V_{j-1}空间的所有函数均正交。以公式(8)中函数的线性组合，形成的空间W_{j}，是V_{j}的子集。 当j很大时，空间W_{j}表示的尖峰就与信号中的噪声十分相似了，为了滤掉噪声，可以把W_{j}中的项设为0。 接下来证明V_{j}空间是V_{j-1}空间与W_{j-1}空间的直和(如果V_{j}中的元素不属于V_{j-1}，就一定属于W_{j-1})。 令式(8)中k=0，并联立式(6)，容易得到 \r \\begin{aligned}\r \\varphi(2^{j}t)&=\\frac{1}{2}\\left( \\psi(2^{j-1}t)+ \\varphi(2^{j-1}t) \\right)\\\\\r \\varphi(2^{j}t-1)&=\\frac{1}{2}\\left( \\psi(2^{j-1}t)- \\varphi(2^{j-1}t) \\right)\r \\end{aligned}\r 因此有 \r \\begin{aligned}\r f_{j}(t)&=\\sum_{k \\in Z} c_{k}\\varphi(2^{j}t-k)\\\\\r &=\\begin{matrix}\\underbrace{\\sum_{k \\in Z}c_{2k}\\varphi[2^{j}(t-k)]}\\\\\\text{even}\\end{matrix}+\\begin{matrix}\\underbrace{\\sum_{k \\in Z}c_{2k+1}\\varphi[2^{j}(t-k)-1]}\\\\\\text{odd}\\end{matrix}\\\\\r &=\\frac{1}{2}\\left\\lbrace\\sum_{k \\in Z}c_{2k} \\left[ \\psi(2^{j-1}(t-k))+ \\varphi(2^{j-1}(t-k)) \\right] \\right.\\\\\r &\\quad\\quad +\\left.\\sum_{k \\in Z}c_{2k+1}\\left[ \\psi(2^{j-1}(t-k))- \\varphi(2^{j-1}(t-k)) \\right]\\right\\rbrace\\\\\r &=\\left\\lbrace\\sum_{k \\in Z}\\frac{c_{2k}+c_{2k+1}}{2} \\left[ \\psi(2^{j-1}(t-k))\\right] \\right.\\\\\r &\\quad +\\left.\\sum_{k \\in Z}\\frac{c_{2k}-c_{2k+1}}{2}\\left[ \\varphi(2^{j-1}(t-k)) \\right]\\right\\rbrace\\\\\r &=w_{j-1}+f_{j-1}\r \\end{aligned}\r 因此，容易得到 \r f_{j}(t)=w_{j-1}+f_{j-1}=w_{j-1}+w_{j-2}+w_{j-3}+\\cdots+w_{0}+f_{0}\\tag{9}\r 这表示V_{j}中的任意函数，可以写作W_{j}中的函数和V_{j-1}中函数的线性组合。因此W_{j-1}是V_{j-1}的正交补：W_{j-1}与V_{j-1}相互正交，且互为补集。 \r \\begin{aligned}\r V_{j}&=W_{j-1}\\bigoplus V_{j-1}\\\\\r &=W_{j-1} \\bigoplus W_{j-2} \\bigoplus V_{j-2}\\\\\r &=W_{j-1} \\bigoplus W_{j-2} \\bigoplus \\cdots \\bigoplus W_{0} \\bigoplus V_{0}\r \\end{aligned}\\tag{10}\r 公式(10)意思就是：如果使用公式(2)进行信号近似，本质上是使用\\varphi(t)和不同尺度的\\psi(t)进行近似，也就是使用阶梯和毛刺近似了任意信号f(t)。根据公式(9)，有 \r \\begin{aligned}\r f(t) &\\approx f_{j}(t)\\\\\r &=\\left\\lbrace w_{j-1}+w_{j-2}+\\cdots+w_{0}+f_{0}\\right\\rbrace\\\\\r &=\\sum_{j=1}^{\\infty}\\sum_{k\\in Z}c_{j,k}\\psi[2^{j-1}(t-k)] + \\sum_{k\\in Z}d_{k}\\varphi(t-k)\r \\end{aligned}\\tag{11}\r 看到了吗，任意一个函数f(t)，可以用\\psi经过一系列缩放、平移形成的函数，和\\varphi(t)经过平移形成的函数的线性组合来表达。 也就是说，这里我们只把母小波进行平移，把父小波进行缩放、平移，组合可以得到任意函数。 相信你已经理解父小波为什么还叫做尺度函数(scaling function)了吧！ 为了强化记忆，我们把公式(11)抄写一遍： \r f(t) =\\sum_{j\\in N}\\sum_{k\\in Z}c_{j,k}\\psi[2^{j}(t-k)] + \\sum_{k\\in Z}d_{k}\\varphi(t-k)\\tag{12}\r 事实上，在实践过程中，我们用的更多的是公式(12)而不是公式(2)。首先将信号转换为小波分量，要滤除j对应的毛刺信号，需要将j对应的分量置为0.然后进行小波反变换，转换为时域信号。 小结 小波分解： \r f(t) =\\sum_{j\\in N}\\left\\lbrace\\sum_{i=1}^{j}\\psi[2^{i-1}(t-k)]\\right\\rbrace+\\sum_{j\\in N}\\varphi(t-k)\r 母小波\\varphi(t)一般具有以下性质： 平移正交性：函数自身与平移后的函数相互正交，\\langle \\varphi(t),\\varphi(t-kT)\\rangle =0； 归一化：能量为1，\\langle \\varphi(t),\\varphi(t) \\rangle =\\int^{\\infty}_{-\\infty}\\varphi^{2}(t)dt= 1。 父小波\\psi(t)一般具有以下性质： 平移正交性：函数自身与平移后的函数相互正交，\\langle \\psi(t),\\psi(t-kT)\\rangle =0； 归一化：能量为1，\\langle \\psi(t),\\psi(t) \\rangle =\\int^{\\infty}_{-\\infty}\\psi^{2}(t)dt= 1。 与母小波\\varphi(t)正交。 留个问题：父小波是不是可以和母小波互换呢? 接下来你可能想看： 小波变换(三): 从实例代码看Haar小波分解和重构 参考内容 形象易懂讲解算法I-小波变换 《The Wavelet Tutorial》小波教程 中文翻译（上） python实现小波变换的一个简单例子 小波变换和motion信号处理（一） 小波变换和motion信号处理：第二篇 MathJax.Hub.Config({ TeX: { extensions: [\"extpfeil.js\"] }}); 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-11 09:08:05 "},"KnowWorld/SigASys/SigProc/wavelet3.html":{"url":"KnowWorld/SigASys/SigProc/wavelet3.html","title":"小波变换(三): 从实例代码看Haar小波分解和重构","keywords":"","body":"小波变换(三): 从实例代码看Haar小波分解和重构 系列文章列表 本文是《小波变换》系列的第3篇，主要介绍Haar小波的分解与重构,并给出Python代码实例. 小波变换(一): 为什么需要小波? 小波变换(二): 小波基函数,母小波和父小波 小波变换(三): 从实例代码看Haar小波分解和重构 小波变换(四): 常用小波特点及二维小波变换 小波变换(五): 小波，傅里叶与卷积的关系 小波分解与重构 上一节，我们介绍了父小波和母小波的概念。以及如何将f(t)表示为父小波和母小波的组合，这就是小波分解。 我们把信号 \r f(t) = \\sum_{k\\in Z} b_{k}\\varphi(2^{j}t-k),\\text{here}\\;c_{k}\\in R\\tag{1}\r 进行了小波分解，得到： \r f(t) =\\sum_{j=1}^{\\infty}\\sum_{k\\in Z}c_{j,k}\\psi[2^{j-1}(t-k)] + \\sum_{k\\in Z}d_{k}\\varphi(t-k)\\tag{2}\r 那么在去除V_{j}中的分量之后，需要将小波分量重新表示成式(1)的形式。这就是小波重构。 小波重构是已知(2)中的c_{j,k}和d_{k}，求(1)中b_{k}的过程。 由上节中式(8)可知 \\psi[2^{j-1}(t-k)] = \\varphi[2^{j}(t-k)]-\\varphi[2^{j}(t-k)-1] 代入(2)式后即可重构出小波。 可能看得绕了，没关系，看个例子放松下~ Haar小波实例 怎样计算得到小波分量值? 继续以Haar小波为例，图(a)中\\varphi(t)作为母小波，图(b)中\\psi(t)作为父小波。 根据上面式(2)，我们先用向量表示出\\psi[2^{j}(t-k)]和\\varphi(t-k)这些基函数。 首先，如果用V_{j=1}去近似原始的时域信号，暂时不考虑母小波平移变换得到的基函数，则基函数有且仅有母小波\\varphi和父小波\\psi(t)，基函数数目为N=2^{j}=2，两个基函数可以表示为如下形式： \r N=2,H=\\frac{1}{\\sqrt{2}}\\left[\\begin{matrix}1 & 1\\\\1 & -1\\end{matrix}\\right]\r 其中，矩阵H的两个行向量分别表示母小波\\varphi和父小波\\psi(t)。 进一步地，如果使用V_{j=2}去近似原始的时域信号，同样不考虑母小波平移变换得到的基函数，则基函数除了母小波\\varphi和父小波\\psi(t)，还有对父小波的缩放产生的基函数，基函数数目为N=2^{j}=4，4个基函数可以表示为如下形式： \r N=4,H=\\left[\\begin{matrix}\\frac{1}{2} & \\frac{1}{2} & \\frac{1}{2} & \\frac{1}{2}\\\\\\frac{1}{2} & \\frac{1}{2} & -\\frac{1}{2} & -\\frac{1}{2}\\\\\\frac{1}{\\sqrt{2}} & -\\frac{1}{\\sqrt{2}} & 0 & 0\\\\0 & 0 & \\frac{1}{\\sqrt{2}} & -\\frac{1}{\\sqrt{2}}\\end{matrix}\\right]\r 进一步的，有 \r N=8,H=\\left[\\begin{matrix}\\frac{1}{2\\sqrt{2}} & \\frac{1}{2\\sqrt{2}} & \\frac{1}{2\\sqrt{2}} & \\frac{1}{2\\sqrt{2}} & \\frac{1}{2\\sqrt{2}} & \\frac{1}{2\\sqrt{2}} & \\frac{1}{2\\sqrt{2}} & \\frac{1}{2\\sqrt{2}}\\\\\\frac{1}{2\\sqrt{2}} & \\frac{1}{2\\sqrt{2}} & \\frac{1}{2\\sqrt{2}} & \\frac{1}{2\\sqrt{2}} & -\\frac{1}{2\\sqrt{2}} & -\\frac{1}{2\\sqrt{2}} & -\\frac{1}{2\\sqrt{2}} & -\\frac{1}{2\\sqrt{2}}\\\\\\frac{1}{2} & \\frac{1}{2} & -\\frac{1}{2} & -\\frac{1}{2} & 0 & 0 & 0 & 0\\\\0 & 0 & 0 & 0 & \\frac{1}{2} & \\frac{1}{2} & -\\frac{1}{2} & -\\frac{1}{2}\\\\\\frac{1}{\\sqrt{2}} & -\\frac{1}{\\sqrt{2}} & 0 & 0 & 0 & 0 & 0 & 0\\\\0 & 0 & \\frac{1}{\\sqrt{2}} & -\\frac{1}{\\sqrt{2}} & 0 & 0 & 0 & 0\\\\0 & 0 & 0 & 0 & \\frac{1}{\\sqrt{2}} & -\\frac{1}{\\sqrt{2}} & 0 & 0\\\\0 & 0 & 0 & 0 & 0 & 0 & \\frac{1}{\\sqrt{2}} & -\\frac{1}{\\sqrt{2}}\\end{matrix}\\right]\r 上述矩阵叫做哈尔变换矩阵。在每个矩阵中： 任取两个行向量来进行内积的运算，所得到的内积皆为零，表示相互正交。 每个行向量的模长为1，表示能量归一化。 因此，把信号f(t)写成一个列向量\\vec{x}，则式(2)中各基函数的分量值 \r \\vec{c}=H\\vec{x}\r 理论上讲，我们直接用最复杂的基进行分解，能够一次性地得到各小波基函数上的分量。但是再复杂的基都没有信号长度长呀~ 于是，聪明的人类想到了一种办法，用最简单的基，多次分解! 注意到，对于最简单的Haar基，H的行数也就是基函数的个数N=2，几乎肯定小于向量\\vec{x}的行数，也就是信号长度L。但考虑到，我们的基函数还不包括平移得到的一部分基函数，所以我们可以对H中的每个行向量H_{i}平移得到平移后的基函数，连同原本H中的基函数H_{i}，共有L个基函数，就覆盖了整个信号的长度，于是有： \r \\left(\\begin{matrix}c_{1}\\\\c_{2}\\\\\\vdots\\\\c_{L}\\end{matrix}\\right)=\\begin{matrix}&2*L/2\\;\\text{cols}&\\\\L\\;\\text{rows}&\\left\\lbrace\\overbrace{\\left(\\begin{matrix}H_{1} & 0 &\\cdots &0\\\\0 &H_{1} &\\cdots &0\\\\\\vdots &\\vdots &\\ddots &\\vdots\\\\0 &0 &\\cdots &H_{1}\\\\H_{2} & 0 &\\cdots &0\\\\0 &H_{2} &\\cdots &0\\\\\\vdots &\\vdots &\\ddots &\\vdots\\\\0 &0 &\\cdots &H_{2}\\end{matrix}\\right)}\\right.\\end{matrix}\\vec{x}\\tag{3}\r 这就得到了信号f(t)在各个基函数的分量值。 Haar小波分解与重构算法 回过头来，再看最简单的Haar变换矩阵H，可以看到第一个基函数是母小波，因此使用式(3)实现了对信号的平均，得到了低频分量；第二个基函数是父小波，使用式(3)则相应地获得了高频分量。如果对低频分量中的小波系数进一步使用式(3)进行分解，就可以得到更低频的分量，以及次高频的分量。多次分解之后，我们得到了一个系数向量： \r \\vec{c}=\\left[\\cdots\\left[\\left[\\left[V_{0}\\right],W_{0}\\right],W_{1}\\right],\\cdots,W_{n}\\right]^{T}\\tag{4}\r 看到式(4)，再把式(2)拿过来看看，是不是对上了! \r f(t) =\\sum_{j=1}^{\\infty}\\sum_{k\\in Z}c_{j,k}\\psi[2^{j-1}(t-k)] + \\sum_{k\\in Z}d_{k}\\varphi(t-k)\\tag{2}\r 于是，当当当当，我们的小波变换算法已经成型啦： 采用最简单的Haar基(N=2,H=\\frac{1}{\\sqrt{2}}\\left[\\begin{matrix}1 & 1\\\\1 & -1\\end{matrix}\\right])； 对长度为L的信号x(t)执行公式(3)，进行小波变换，得到长度为L的小波系数向量\\vec{c}，覆盖写回x(t)，设置变量n=1； 将x(t)中小波系数向量\\vec{c}分为2^n份； 从x(t)中最左侧取出长度为L/2^n的一小段，执行公式(3)进行小波变换，得到长度为L/2^n的小波系数向量\\vec{c}，覆盖写回x(t)原位置(最左侧)； n=n+1； L/2^n小于N=2时停止，否则重复步骤3，步骤4和步骤5； 那么，再进一步，怎么实现滤波呢? 如果把最终的小波系数向量\\vec{c}中绝对值较小的系数删除掉，则去除了低能量的信号，例如噪声。如果把\\vec{c}尾部的一小段去掉，则去除了高频分量，例如噪声。 滤波之后怎么重构呢? 设置n=1； 从x(t)中最左侧取出长度为2^n的第一份，乘以小波逆变换的变换矩阵(就是式(3)中矩阵的转置,还是它自身)，得到长度为L/2^n的小波系数向量\\vec{c}，覆盖写回x(t)第一份的位置，也就是原位置； n=n+1； 2^n大于L时停止，否则重复步骤9，步骤10； 对应的Python代码为： import math class wave: def __init__(self): M_SQRT1_2 = math.sqrt(0.5) self.h1 = [M_SQRT1_2, M_SQRT1_2] self.g1 = [M_SQRT1_2, -M_SQRT1_2] self.h2 = [M_SQRT1_2, M_SQRT1_2] self.g2 = [M_SQRT1_2, -M_SQRT1_2] # 小波基函数的个数为2 self.nc = 2 self.offset = 0 def __del__(self): return class Wavelet: def __init__(self, n): self._haar_centered_Init() self._scratch = [] for i in range(0, n): self._scratch.append(0.0) return def __del__(self): return def transform_inverse(self, list, stride): self._wavelet_transform(list, stride, -1) return def transform_forward(self, list, stride): self._wavelet_transform(list, stride, 1) return def _haarInit(self): self._wave = wave() self._wave.offset = 0 return def _haar_centered_Init(self): self._wave = wave() self._wave.offset = 1 return def _wavelet_transform(self, list, stride, dir): n = len(list) if (len(self._scratch) = 2): self._step(list, stride, i, dir) i = i >> 1 if (dir == -1): # 逆变换 i = 2 while (i 1e-6): return False else: return True def _step(self, list, stride, n, dir): for i in range(0, len(self._scratch)): self._scratch[i] = 0.0 nmod = self._wave.nc * n nmod -= self._wave.offset n1 = n - 1 nh = n >> 1 if (dir == 1): # 正变换 ii = 0 i = 0 while (i 测试代码为： import numpy as np import matplotlib.pyplot as plt import os, inspect import math def main(): currentdir = os.path.dirname( os.path.abspath(inspect.getfile(inspect.currentframe()))) parentdir = os.path.dirname(currentdir) os.sys.path.insert(0, parentdir) from res.WaveletTrans import Wavelet waveletn = 256 wavelettest = Wavelet(waveletn) t = np.linspace(0, 255, 256) waveletorigindata = np.sin(t) * np.exp(-((t - 100) / 50)**2) + 1 filterFlag = 0 # 滤波方式: 1-按能量滤波; 0-按频率滤波 if (filterFlag): # 按能量大小进行滤波，滤掉将能量较小的分量 # 将小波系数进行降序排列(升序取反) plt.figure(figsize=(12, 10)) for k in range(4): waveletdata = np.sin(t) * np.exp(-((t - 100) / 50)**2) + 1 wavelettest.transform_forward(waveletdata, 1) # 执行小波变换 waveletnc = 20 * (2**k) # 按能量滤波时，保留的分量数 newdata = sorted(waveletdata, key=lambda ele: abs(ele), reverse=True) for i in range(waveletnc, waveletn): # 将能量较小的分量直接置0，删除啦 for j in range(0, waveletn): if (abs(newdata[i] - waveletdata[j]) len(waveletdata) * hFreq[k] ] waveletdata[omg] = 0 wavelettest.transform_inverse(waveletdata, 1) waveleterr = 0.0 for i in range(0, waveletn): waveleterr += abs(waveletorigindata[i] - waveletdata[i]) / abs( waveletorigindata[i]) ax = plt.subplot(2, 2, k + 1) plt.plot(waveletorigindata, color='blue', linestyle='-', label='$f$') plt.plot(waveletdata, color='red', linestyle='-', label=\"$f'$\") ax.set_xlabel('$t(s)$') ax.set_ylabel('$f(V)$') ax.legend(loc='upper right') ax.set_title( \"BandPass[{:.2f},{:.2f}],relative error:{:.3f}\".format( lFreq[k], hFreq[k], waveleterr / waveletn)) plt.show() if __name__ == \"__main__\": main() 测试结果: 按能量滤波时： 按频率滤波时(带通)： 接下来你可能想看： 小波变换(四): 常用小波函数及二维小波变换 参考内容 形象易懂讲解算法I-小波变换 《The Wavelet Tutorial》小波教程 中文翻译（上） python实现小波变换的一个简单例子 小波变换和motion信号处理（一） 小波变换和motion信号处理：第二篇 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-10 20:44:05 "},"KnowWorld/SigASys/SigProc/wavelet4.html":{"url":"KnowWorld/SigASys/SigProc/wavelet4.html","title":"小波变换(四): 常用小波特点及二维小波变换","keywords":"","body":"小波变换(四): 常用小波特点及二维小波变换 系列文章列表 前面三篇我们系统学习了小波变换的基础理论和Haar滤波的方法。那么本文是《小波变换》系列的第4篇，主要介绍常用小波特点及二维小波变换. 小波变换(一): 为什么需要小波? 小波变换(二): 小波基函数,母小波和父小波 小波变换(三): 从实例代码看Haar小波分解和重构 小波变换(四): 常用小波特点及二维小波变换 小波变换(五): 小波，傅里叶与卷积的关系 常用的小波基函数 母小波 正交性 父小波(尺度函数) 图解 Haar \\varphi(t)=\\begin{cases}1 &0 \\leq t 有 \\psi(t)=\\begin{cases}1 &0 \\leq t db4 无 无 无 无 Mexh墨西哥帽 \\varphi(t)=(1-t^{2})e^{t^2/2} 无 无 Morlet \\varphi(t)=Ce^{t^2/2}\\cos{(5t)} 无 无 Meyer 无 无 无 二维小波变换 二维哈尔小波变换是将一个由8*8元素组成的图像块的矩阵，进行小波变换时，对矩阵中的每一行进行行变换，然后对行变换后的矩阵每一列进行列变换，最终得到小波系数矩阵。 接下来你可能想看： 小波变换(五): 小波，傅里叶与卷积的关系 参考内容 形象易懂讲解算法I-小波变换 《The Wavelet Tutorial》小波教程 中文翻译（上） python实现小波变换的一个简单例子 小波变换和motion信号处理（一） 小波变换和motion信号处理：第二篇 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-10 20:44:04 "},"KnowWorld/SigASys/SigProc/wavelet5.html":{"url":"KnowWorld/SigASys/SigProc/wavelet5.html","title":"小波变换(五): 小波变换与卷积","keywords":"","body":"小波变换(五): 小波变换与卷积 系列文章列表 本文是《小波变换》系列的第5篇，主要分析小波变换和卷积的关系。 小波变换(一): 为什么需要小波? 小波变换(二): 小波基函数,母小波和父小波 小波变换(三): 从实例代码看Haar小波分解和重构 小波变换(四): 常用小波特点及二维小波变换 小波变换(五): 小波，傅里叶与卷积的关系 傅里叶滤波和小波滤波的区别是什么? 其实这个问题在小波变换(一): 为什么需要小波?中已经回答过了。 通常意义下的Fourier Transform（我们这里不考虑比如Short-time Fourier Transform之类的局部变化）是一个全局的变换，而可以把小波变换理解成是一个局部的频率变换。那么为什么说Wavelet通常会比Fourier在modeling一些自然信号时候更有优势（更好的稀疏化信号）呢？举个栗子，我们都知道一段全局smooth的信号（比如一条直线），是可以在Fourier Transform里面被稀疏化的。而这类信号经常出现在自然图像里面，比如edge一类的texture。然而如果这条线突然变成了两段，比如中间出现转折，或者断了，对于Fourier来说，他的稀疏性就降低了。这类现象也是经常出现在自然图片里面的。然而Wavelet只是分析局部的频率，他的可稀疏化信号，只需要piece-wise smooth就行了。这大大地扩宽了在自然信号里的普适性，从而使得他在降噪应用里效果拔群。 小波与卷积 小波基函数(能量有限，时间长度有限)本质上就是一个卷积(滤波器)窗口。原始时域信号与小波基函数的内积，代表了信号在该小波基函数方向的分量大小，也就是原始时域信号与滑窗的卷积。因此，小波级数与卷积一样，都是把原始信号分解到一系列的窗函数上。 一维小波基函数对应于变换矩阵的向量，就是一个一维的卷积滑窗。二维小波基函数对应的张量，就是一个二维的卷积滑窗。 恭喜你解锁了小波变换彩蛋: Python中的小波变换库。 参考内容 形象易懂讲解算法I-小波变换 《The Wavelet Tutorial》小波教程 中文翻译（上） python实现小波变换的一个简单例子 小波变换和motion信号处理（一） 小波变换和motion信号处理：第二篇 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-10 20:46:38 "},"KnowWorld/SigASys/SigProc/wavelet6.html":{"url":"KnowWorld/SigASys/SigProc/wavelet6.html","title":"小波变换彩蛋: Python中的小波变换库","keywords":"","body":"小波变换彩蛋: Python中的小波变换库 系列文章列表 小波变换(一): 为什么需要小波? 小波变换(二): 小波基函数,母小波和父小波 小波变换(三): 从实例代码看Haar小波分解和重构 小波变换(四): 常用小波特点及二维小波变换 小波变换(五): 小波，傅里叶与卷积的关系 小波变换彩蛋: Python中的小波变换库。 pywt：Python 小波去噪 在python中使用小波分析进行阈值去噪声,使用pywt.threshold函数。 #coding=utf-8 #使用小波分析进行阈值去噪声,使用pywt.threshold import pywt import numpy as np import pandas as pd import matplotlib.pyplot as plt import math data = np.linspace(1, 10, 10) print(data) # [ 1. 2. 3. 4. 5. 6. 7. 8. 9. 10.] # pywt.threshold(data, value, mode, substitute) mode 模式有4种，soft, hard, greater, less; substitute是替换值 data_soft = pywt.threshold(data=data, value=6, mode='soft', substitute=12) print(data_soft) # [12. 12. 12. 12. 12. 0. 1. 2. 3. 4.] 将小于6 的值设置为12， 大于等于6 的值全部减去6 data_hard = pywt.threshold(data=data, value=6, mode='hard', substitute=12) print(data_hard) # [12. 12. 12. 12. 12. 6. 7. 8. 9. 10.] 将小于6 的值设置为12， 其余的值不变 data_greater = pywt.threshold(data, 6, 'greater', 12) print(data_greater) # [12. 12. 12. 12. 12. 6. 7. 8. 9. 10.] 将小于6 的值设置为12，大于等于阈值的值不变化 data_less = pywt.threshold(data, 6, 'less', 12) print(data_less) # [ 1. 2. 3. 4. 5. 6. 12. 12. 12. 12.] 将大于6 的值设置为12， 小于等于阈值的值不变 ECG小波去噪 import matplotlib.pyplot as plt import pywt # Get data: ecg = pywt.data.ecg() # 生成心电信号 index = [] data = [] for i in range(len(ecg)-1): X = float(i) Y = float(ecg[i]) index.append(X) data.append(Y) # Create wavelet object and define parameters w = pywt.Wavelet('db8') # 选用Daubechies8小波 maxlev = pywt.dwt_max_level(len(data), w.dec_len) print(\"maximum level is \" + str(maxlev)) threshold = 0.04 # Threshold for filtering # Decompose into wavelet components, to the level selected: coeffs = pywt.wavedec(data, 'db8', level=maxlev) # 将信号进行小波分解 plt.figure() for i in range(1, len(coeffs)): coeffs[i] = pywt.threshold(coeffs[i], threshold*max(coeffs[i])) # 将噪声滤波 datarec = pywt.waverec(coeffs, 'db8') # 将信号进行小波重构 mintime = 0 maxtime = mintime + len(data) + 1 plt.figure() plt.subplot(2, 1, 1) plt.plot(index[mintime:maxtime], data[mintime:maxtime]) plt.xlabel('time (s)') plt.ylabel('microvolts (uV)') plt.title(\"Raw signal\") plt.subplot(2, 1, 2) plt.plot(index[mintime:maxtime], datarec[mintime:maxtime-1]) plt.xlabel('time (s)') plt.ylabel('microvolts (uV)') plt.title(\"De-noised signal using wavelet techniques\") plt.tight_layout() plt.show() 运行结果如下： 参考内容 python小波变换去噪 正在加载今日诗词.... Copyright © charleechan 2021 all right reserved，powered by GitbookUpdated At: 2021-02-10 20:50:42 "}}